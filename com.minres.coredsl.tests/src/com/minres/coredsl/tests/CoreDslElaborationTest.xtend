/*
 * generated by Xtext 2.10.0
 */
package com.minres.coredsl.tests

import com.google.inject.Inject
import com.minres.coredsl.coreDsl.DescriptionContent
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.eclipse.xtext.testing.validation.ValidationTestHelper
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith

import static org.junit.jupiter.api.Assertions.assertTrue

@ExtendWith(InjectionExtension)
@InjectWith(CoreDslInjectorProvider)
class CoreDslElaborationTest {

	@Inject extension ParseHelper<DescriptionContent> parseHelper

	@Inject ValidationTestHelper validator

	@Test
	def void valid() {
		val validPrograms = #[
			'''
				InstructionSet A {
				    architectural_state {
				        int x;
				    }
				}
				Core X provides A {
				    architectural_state {
				        x = 1;
				    }
				}
			'''
		];

		for (program : validPrograms) {
			val content = program.parse();

			val issues = validator.validate(content);
			if(!issues.empty) {
				println(program);
				for (issue : issues) {
					println(issue);
				}
			}

			assertTrue(issues.empty);
		}
	}
}
