/**
 * generated by Xtext 2.22.0
 */
package com.minres.coredsl.coreDsl.impl;

import com.minres.coredsl.coreDsl.AbstractDeclarator;
import com.minres.coredsl.coreDsl.CoreDslPackage;
import com.minres.coredsl.coreDsl.DirectAbstractDeclarator;
import com.minres.coredsl.coreDsl.Expression;
import com.minres.coredsl.coreDsl.ParameterDeclaration;
import com.minres.coredsl.coreDsl.ParameterList;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Direct Abstract Declarator</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.minres.coredsl.coreDsl.impl.DirectAbstractDeclaratorImpl#getParams <em>Params</em>}</li>
 *   <li>{@link com.minres.coredsl.coreDsl.impl.DirectAbstractDeclaratorImpl#getParameters <em>Parameters</em>}</li>
 *   <li>{@link com.minres.coredsl.coreDsl.impl.DirectAbstractDeclaratorImpl#getDeclarator <em>Declarator</em>}</li>
 *   <li>{@link com.minres.coredsl.coreDsl.impl.DirectAbstractDeclaratorImpl#getExpr <em>Expr</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DirectAbstractDeclaratorImpl extends AbstractDeclaratorImpl implements DirectAbstractDeclarator
{
  /**
   * The cached value of the '{@link #getParams() <em>Params</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParams()
   * @generated
   * @ordered
   */
  protected EList<ParameterDeclaration> params;

  /**
   * The cached value of the '{@link #getParameters() <em>Parameters</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParameters()
   * @generated
   * @ordered
   */
  protected EList<ParameterDeclaration> parameters;

  /**
   * The cached value of the '{@link #getDeclarator() <em>Declarator</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDeclarator()
   * @generated
   * @ordered
   */
  protected AbstractDeclarator declarator;

  /**
   * The cached value of the '{@link #getExpr() <em>Expr</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpr()
   * @generated
   * @ordered
   */
  protected Expression expr;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DirectAbstractDeclaratorImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CoreDslPackage.Literals.DIRECT_ABSTRACT_DECLARATOR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ParameterDeclaration> getParams()
  {
    if (params == null)
    {
      params = new EObjectContainmentEList<ParameterDeclaration>(ParameterDeclaration.class, this, CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__PARAMS);
    }
    return params;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ParameterDeclaration> getParameters()
  {
    if (parameters == null)
    {
      parameters = new EObjectContainmentEList<ParameterDeclaration>(ParameterDeclaration.class, this, CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__PARAMETERS);
    }
    return parameters;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AbstractDeclarator getDeclarator()
  {
    return declarator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDeclarator(AbstractDeclarator newDeclarator, NotificationChain msgs)
  {
    AbstractDeclarator oldDeclarator = declarator;
    declarator = newDeclarator;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__DECLARATOR, oldDeclarator, newDeclarator);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDeclarator(AbstractDeclarator newDeclarator)
  {
    if (newDeclarator != declarator)
    {
      NotificationChain msgs = null;
      if (declarator != null)
        msgs = ((InternalEObject)declarator).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__DECLARATOR, null, msgs);
      if (newDeclarator != null)
        msgs = ((InternalEObject)newDeclarator).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__DECLARATOR, null, msgs);
      msgs = basicSetDeclarator(newDeclarator, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__DECLARATOR, newDeclarator, newDeclarator));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getExpr()
  {
    return expr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExpr(Expression newExpr, NotificationChain msgs)
  {
    Expression oldExpr = expr;
    expr = newExpr;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__EXPR, oldExpr, newExpr);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExpr(Expression newExpr)
  {
    if (newExpr != expr)
    {
      NotificationChain msgs = null;
      if (expr != null)
        msgs = ((InternalEObject)expr).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__EXPR, null, msgs);
      if (newExpr != null)
        msgs = ((InternalEObject)newExpr).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__EXPR, null, msgs);
      msgs = basicSetExpr(newExpr, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__EXPR, newExpr, newExpr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__PARAMS:
        return ((InternalEList<?>)getParams()).basicRemove(otherEnd, msgs);
      case CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__PARAMETERS:
        return ((InternalEList<?>)getParameters()).basicRemove(otherEnd, msgs);
      case CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__DECLARATOR:
        return basicSetDeclarator(null, msgs);
      case CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__EXPR:
        return basicSetExpr(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__PARAMS:
        return getParams();
      case CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__PARAMETERS:
        return getParameters();
      case CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__DECLARATOR:
        return getDeclarator();
      case CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__EXPR:
        return getExpr();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__PARAMS:
        getParams().clear();
        getParams().addAll((Collection<? extends ParameterDeclaration>)newValue);
        return;
      case CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__PARAMETERS:
        getParameters().clear();
        getParameters().addAll((Collection<? extends ParameterDeclaration>)newValue);
        return;
      case CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__DECLARATOR:
        setDeclarator((AbstractDeclarator)newValue);
        return;
      case CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__EXPR:
        setExpr((Expression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__PARAMS:
        getParams().clear();
        return;
      case CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__PARAMETERS:
        getParameters().clear();
        return;
      case CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__DECLARATOR:
        setDeclarator((AbstractDeclarator)null);
        return;
      case CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__EXPR:
        setExpr((Expression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__PARAMS:
        return params != null && !params.isEmpty();
      case CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__PARAMETERS:
        return parameters != null && !parameters.isEmpty();
      case CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__DECLARATOR:
        return declarator != null;
      case CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__EXPR:
        return expr != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass)
  {
    if (baseClass == ParameterList.class)
    {
      switch (derivedFeatureID)
      {
        case CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__PARAMS: return CoreDslPackage.PARAMETER_LIST__PARAMS;
        case CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__PARAMETERS: return CoreDslPackage.PARAMETER_LIST__PARAMETERS;
        default: return -1;
      }
    }
    return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass)
  {
    if (baseClass == ParameterList.class)
    {
      switch (baseFeatureID)
      {
        case CoreDslPackage.PARAMETER_LIST__PARAMS: return CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__PARAMS;
        case CoreDslPackage.PARAMETER_LIST__PARAMETERS: return CoreDslPackage.DIRECT_ABSTRACT_DECLARATOR__PARAMETERS;
        default: return -1;
      }
    }
    return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
  }

} //DirectAbstractDeclaratorImpl
