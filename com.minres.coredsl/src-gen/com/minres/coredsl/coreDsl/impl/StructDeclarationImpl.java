/**
 * generated by Xtext 2.22.0
 */
package com.minres.coredsl.coreDsl.impl;

import com.minres.coredsl.coreDsl.CoreDslPackage;
import com.minres.coredsl.coreDsl.DirectDeclarator;
import com.minres.coredsl.coreDsl.StructDeclaration;
import com.minres.coredsl.coreDsl.StructDeclarationSpecifier;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Struct Declaration</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.minres.coredsl.coreDsl.impl.StructDeclarationImpl#getSpecifier <em>Specifier</em>}</li>
 *   <li>{@link com.minres.coredsl.coreDsl.impl.StructDeclarationImpl#getDecls <em>Decls</em>}</li>
 * </ul>
 *
 * @generated
 */
public class StructDeclarationImpl extends MinimalEObjectImpl.Container implements StructDeclaration
{
  /**
   * The cached value of the '{@link #getSpecifier() <em>Specifier</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSpecifier()
   * @generated
   * @ordered
   */
  protected StructDeclarationSpecifier specifier;

  /**
   * The cached value of the '{@link #getDecls() <em>Decls</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDecls()
   * @generated
   * @ordered
   */
  protected EList<DirectDeclarator> decls;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected StructDeclarationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CoreDslPackage.Literals.STRUCT_DECLARATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StructDeclarationSpecifier getSpecifier()
  {
    return specifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSpecifier(StructDeclarationSpecifier newSpecifier, NotificationChain msgs)
  {
    StructDeclarationSpecifier oldSpecifier = specifier;
    specifier = newSpecifier;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CoreDslPackage.STRUCT_DECLARATION__SPECIFIER, oldSpecifier, newSpecifier);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSpecifier(StructDeclarationSpecifier newSpecifier)
  {
    if (newSpecifier != specifier)
    {
      NotificationChain msgs = null;
      if (specifier != null)
        msgs = ((InternalEObject)specifier).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CoreDslPackage.STRUCT_DECLARATION__SPECIFIER, null, msgs);
      if (newSpecifier != null)
        msgs = ((InternalEObject)newSpecifier).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CoreDslPackage.STRUCT_DECLARATION__SPECIFIER, null, msgs);
      msgs = basicSetSpecifier(newSpecifier, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CoreDslPackage.STRUCT_DECLARATION__SPECIFIER, newSpecifier, newSpecifier));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<DirectDeclarator> getDecls()
  {
    if (decls == null)
    {
      decls = new EObjectContainmentEList<DirectDeclarator>(DirectDeclarator.class, this, CoreDslPackage.STRUCT_DECLARATION__DECLS);
    }
    return decls;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CoreDslPackage.STRUCT_DECLARATION__SPECIFIER:
        return basicSetSpecifier(null, msgs);
      case CoreDslPackage.STRUCT_DECLARATION__DECLS:
        return ((InternalEList<?>)getDecls()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CoreDslPackage.STRUCT_DECLARATION__SPECIFIER:
        return getSpecifier();
      case CoreDslPackage.STRUCT_DECLARATION__DECLS:
        return getDecls();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CoreDslPackage.STRUCT_DECLARATION__SPECIFIER:
        setSpecifier((StructDeclarationSpecifier)newValue);
        return;
      case CoreDslPackage.STRUCT_DECLARATION__DECLS:
        getDecls().clear();
        getDecls().addAll((Collection<? extends DirectDeclarator>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CoreDslPackage.STRUCT_DECLARATION__SPECIFIER:
        setSpecifier((StructDeclarationSpecifier)null);
        return;
      case CoreDslPackage.STRUCT_DECLARATION__DECLS:
        getDecls().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CoreDslPackage.STRUCT_DECLARATION__SPECIFIER:
        return specifier != null;
      case CoreDslPackage.STRUCT_DECLARATION__DECLS:
        return decls != null && !decls.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //StructDeclarationImpl
