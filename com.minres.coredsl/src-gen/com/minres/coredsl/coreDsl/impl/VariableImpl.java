/**
 * generated by Xtext 2.22.0
 */
package com.minres.coredsl.coreDsl.impl;

import com.minres.coredsl.coreDsl.Constant;
import com.minres.coredsl.coreDsl.CoreDslPackage;
import com.minres.coredsl.coreDsl.Variable;

import java.math.BigInteger;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Variable</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.minres.coredsl.coreDsl.impl.VariableImpl#getName <em>Name</em>}</li>
 *   <li>{@link com.minres.coredsl.coreDsl.impl.VariableImpl#getBitSize <em>Bit Size</em>}</li>
 *   <li>{@link com.minres.coredsl.coreDsl.impl.VariableImpl#getBitSizeConst <em>Bit Size Const</em>}</li>
 * </ul>
 *
 * @generated
 */
public class VariableImpl extends MinimalEObjectImpl.Container implements Variable
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getBitSize() <em>Bit Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBitSize()
   * @generated
   * @ordered
   */
  protected static final BigInteger BIT_SIZE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBitSize() <em>Bit Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBitSize()
   * @generated
   * @ordered
   */
  protected BigInteger bitSize = BIT_SIZE_EDEFAULT;

  /**
   * The cached value of the '{@link #getBitSizeConst() <em>Bit Size Const</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBitSizeConst()
   * @generated
   * @ordered
   */
  protected Constant bitSizeConst;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected VariableImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CoreDslPackage.Literals.VARIABLE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CoreDslPackage.VARIABLE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BigInteger getBitSize()
  {
    return bitSize;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBitSize(BigInteger newBitSize)
  {
    BigInteger oldBitSize = bitSize;
    bitSize = newBitSize;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CoreDslPackage.VARIABLE__BIT_SIZE, oldBitSize, bitSize));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Constant getBitSizeConst()
  {
    if (bitSizeConst != null && bitSizeConst.eIsProxy())
    {
      InternalEObject oldBitSizeConst = (InternalEObject)bitSizeConst;
      bitSizeConst = (Constant)eResolveProxy(oldBitSizeConst);
      if (bitSizeConst != oldBitSizeConst)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, CoreDslPackage.VARIABLE__BIT_SIZE_CONST, oldBitSizeConst, bitSizeConst));
      }
    }
    return bitSizeConst;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Constant basicGetBitSizeConst()
  {
    return bitSizeConst;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBitSizeConst(Constant newBitSizeConst)
  {
    Constant oldBitSizeConst = bitSizeConst;
    bitSizeConst = newBitSizeConst;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CoreDslPackage.VARIABLE__BIT_SIZE_CONST, oldBitSizeConst, bitSizeConst));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CoreDslPackage.VARIABLE__NAME:
        return getName();
      case CoreDslPackage.VARIABLE__BIT_SIZE:
        return getBitSize();
      case CoreDslPackage.VARIABLE__BIT_SIZE_CONST:
        if (resolve) return getBitSizeConst();
        return basicGetBitSizeConst();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CoreDslPackage.VARIABLE__NAME:
        setName((String)newValue);
        return;
      case CoreDslPackage.VARIABLE__BIT_SIZE:
        setBitSize((BigInteger)newValue);
        return;
      case CoreDslPackage.VARIABLE__BIT_SIZE_CONST:
        setBitSizeConst((Constant)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CoreDslPackage.VARIABLE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case CoreDslPackage.VARIABLE__BIT_SIZE:
        setBitSize(BIT_SIZE_EDEFAULT);
        return;
      case CoreDslPackage.VARIABLE__BIT_SIZE_CONST:
        setBitSizeConst((Constant)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CoreDslPackage.VARIABLE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case CoreDslPackage.VARIABLE__BIT_SIZE:
        return BIT_SIZE_EDEFAULT == null ? bitSize != null : !BIT_SIZE_EDEFAULT.equals(bitSize);
      case CoreDslPackage.VARIABLE__BIT_SIZE_CONST:
        return bitSizeConst != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", bitSize: ");
    result.append(bitSize);
    result.append(')');
    return result.toString();
  }

} //VariableImpl
