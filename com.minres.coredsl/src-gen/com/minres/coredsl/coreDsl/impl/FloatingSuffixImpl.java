/**
 * generated by Xtext 2.22.0
 */
package com.minres.coredsl.coreDsl.impl;

import com.minres.coredsl.coreDsl.CoreDslPackage;
import com.minres.coredsl.coreDsl.FloatingSuffix;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Floating Suffix</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.minres.coredsl.coreDsl.impl.FloatingSuffixImpl#isF <em>F</em>}</li>
 *   <li>{@link com.minres.coredsl.coreDsl.impl.FloatingSuffixImpl#isL <em>L</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FloatingSuffixImpl extends MinimalEObjectImpl.Container implements FloatingSuffix
{
  /**
   * The default value of the '{@link #isF() <em>F</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isF()
   * @generated
   * @ordered
   */
  protected static final boolean F_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isF() <em>F</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isF()
   * @generated
   * @ordered
   */
  protected boolean f = F_EDEFAULT;

  /**
   * The default value of the '{@link #isL() <em>L</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isL()
   * @generated
   * @ordered
   */
  protected static final boolean L_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isL() <em>L</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isL()
   * @generated
   * @ordered
   */
  protected boolean l = L_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FloatingSuffixImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CoreDslPackage.Literals.FLOATING_SUFFIX;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isF()
  {
    return f;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setF(boolean newF)
  {
    boolean oldF = f;
    f = newF;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CoreDslPackage.FLOATING_SUFFIX__F, oldF, f));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isL()
  {
    return l;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setL(boolean newL)
  {
    boolean oldL = l;
    l = newL;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CoreDslPackage.FLOATING_SUFFIX__L, oldL, l));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CoreDslPackage.FLOATING_SUFFIX__F:
        return isF();
      case CoreDslPackage.FLOATING_SUFFIX__L:
        return isL();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CoreDslPackage.FLOATING_SUFFIX__F:
        setF((Boolean)newValue);
        return;
      case CoreDslPackage.FLOATING_SUFFIX__L:
        setL((Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CoreDslPackage.FLOATING_SUFFIX__F:
        setF(F_EDEFAULT);
        return;
      case CoreDslPackage.FLOATING_SUFFIX__L:
        setL(L_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CoreDslPackage.FLOATING_SUFFIX__F:
        return f != F_EDEFAULT;
      case CoreDslPackage.FLOATING_SUFFIX__L:
        return l != L_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (f: ");
    result.append(f);
    result.append(", l: ");
    result.append(l);
    result.append(')');
    return result.toString();
  }

} //FloatingSuffixImpl
