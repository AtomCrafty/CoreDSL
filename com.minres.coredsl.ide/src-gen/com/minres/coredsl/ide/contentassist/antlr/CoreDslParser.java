/*
 * generated by Xtext 2.22.0
 */
package com.minres.coredsl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import com.minres.coredsl.ide.contentassist.antlr.internal.InternalCoreDslParser;
import com.minres.coredsl.services.CoreDslGrammarAccess;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class CoreDslParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(CoreDslGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, CoreDslGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getISAAccess().getAlternatives(), "rule__ISA__Alternatives");
			builder.put(grammarAccess.getFieldAccess().getAlternatives(), "rule__Field__Alternatives");
			builder.put(grammarAccess.getFunctionDefinitionAccess().getAlternatives(), "rule__FunctionDefinition__Alternatives");
			builder.put(grammarAccess.getParameterDeclarationAccess().getAlternatives_1(), "rule__ParameterDeclaration__Alternatives_1");
			builder.put(grammarAccess.getStatementAccess().getAlternatives(), "rule__Statement__Alternatives");
			builder.put(grammarAccess.getLabeledStatementAccess().getAlternatives(), "rule__LabeledStatement__Alternatives");
			builder.put(grammarAccess.getBlockItemAccess().getAlternatives(), "rule__BlockItem__Alternatives");
			builder.put(grammarAccess.getSelectionStatementAccess().getAlternatives(), "rule__SelectionStatement__Alternatives");
			builder.put(grammarAccess.getIterationStatementAccess().getAlternatives(), "rule__IterationStatement__Alternatives");
			builder.put(grammarAccess.getForConditionAccess().getAlternatives_0(), "rule__ForCondition__Alternatives_0");
			builder.put(grammarAccess.getJumpStatementAccess().getAlternatives(), "rule__JumpStatement__Alternatives");
			builder.put(grammarAccess.getDeclarationAccess().getPtrAlternatives_3_0(), "rule__Declaration__PtrAlternatives_3_0");
			builder.put(grammarAccess.getDeclarationSpecifierAccess().getAlternatives(), "rule__DeclarationSpecifier__Alternatives");
			builder.put(grammarAccess.getTypeSpecifierAccess().getAlternatives(), "rule__TypeSpecifier__Alternatives");
			builder.put(grammarAccess.getEnumSpecifierAccess().getAlternatives(), "rule__EnumSpecifier__Alternatives");
			builder.put(grammarAccess.getEnumeratorAccess().getAlternatives(), "rule__Enumerator__Alternatives");
			builder.put(grammarAccess.getStructOrUnionSpecifierAccess().getAlternatives(), "rule__StructOrUnionSpecifier__Alternatives");
			builder.put(grammarAccess.getStructDeclarationSpecifierAccess().getAlternatives(), "rule__StructDeclarationSpecifier__Alternatives");
			builder.put(grammarAccess.getDirectDeclaratorAccess().getAlternatives_2(), "rule__DirectDeclarator__Alternatives_2");
			builder.put(grammarAccess.getInitializerAccess().getAlternatives(), "rule__Initializer__Alternatives");
			builder.put(grammarAccess.getInitializerListAccess().getInitAlternatives_0_0(), "rule__InitializerList__InitAlternatives_0_0");
			builder.put(grammarAccess.getInitializerListAccess().getInitAlternatives_1_1_0(), "rule__InitializerList__InitAlternatives_1_1_0");
			builder.put(grammarAccess.getDesignatorAccess().getAlternatives(), "rule__Designator__Alternatives");
			builder.put(grammarAccess.getDirectAbstractDeclaratorAccess().getAlternatives(), "rule__DirectAbstractDeclarator__Alternatives");
			builder.put(grammarAccess.getDirectAbstractDeclaratorAccess().getAlternatives_0_2(), "rule__DirectAbstractDeclarator__Alternatives_0_2");
			builder.put(grammarAccess.getAssignmentExpressionAccess().getAssignmentAlternatives_1_1_0(), "rule__AssignmentExpression__AssignmentAlternatives_1_1_0");
			builder.put(grammarAccess.getAssignmentExpression2Access().getAssignmentAlternatives_1_1_0(), "rule__AssignmentExpression2__AssignmentAlternatives_1_1_0");
			builder.put(grammarAccess.getEqualityExpressionAccess().getOpAlternatives_1_1_0(), "rule__EqualityExpression__OpAlternatives_1_1_0");
			builder.put(grammarAccess.getRelationalExpressionAccess().getOpAlternatives_1_1_0(), "rule__RelationalExpression__OpAlternatives_1_1_0");
			builder.put(grammarAccess.getShiftExpressionAccess().getOpAlternatives_1_1_0(), "rule__ShiftExpression__OpAlternatives_1_1_0");
			builder.put(grammarAccess.getAdditiveExpressionAccess().getOpAlternatives_1_1_0(), "rule__AdditiveExpression__OpAlternatives_1_1_0");
			builder.put(grammarAccess.getMultiplicativeExpressionAccess().getOpAlternatives_1_1_0(), "rule__MultiplicativeExpression__OpAlternatives_1_1_0");
			builder.put(grammarAccess.getCastExpressionAccess().getAlternatives(), "rule__CastExpression__Alternatives");
			builder.put(grammarAccess.getPrefixExpressionAccess().getAlternatives(), "rule__PrefixExpression__Alternatives");
			builder.put(grammarAccess.getPrefixExpressionAccess().getAlternatives_4_2(), "rule__PrefixExpression__Alternatives_4_2");
			builder.put(grammarAccess.getUnaryOperatorAccess().getOpAlternatives_0(), "rule__UnaryOperator__OpAlternatives_0");
			builder.put(grammarAccess.getPostfixOperatorAccess().getAlternatives(), "rule__PostfixOperator__Alternatives");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getAlternatives(), "rule__PrimaryExpression__Alternatives");
			builder.put(grammarAccess.getVariableAccess().getAlternatives(), "rule__Variable__Alternatives");
			builder.put(grammarAccess.getEncodingPrefixAccess().getPrefixAlternatives_0(), "rule__EncodingPrefix__PrefixAlternatives_0");
			builder.put(grammarAccess.getConstantAccess().getAlternatives(), "rule__Constant__Alternatives");
			builder.put(grammarAccess.getCharacterConstantAccess().getAlternatives(), "rule__CharacterConstant__Alternatives");
			builder.put(grammarAccess.getDataTypesAccess().getAlternatives(), "rule__DataTypes__Alternatives");
			builder.put(grammarAccess.getTypeQualifierAccess().getAlternatives(), "rule__TypeQualifier__Alternatives");
			builder.put(grammarAccess.getStorageClassSpecifierAccess().getAlternatives(), "rule__StorageClassSpecifier__Alternatives");
			builder.put(grammarAccess.getDeclarationAttributeAccess().getAlternatives(), "rule__DeclarationAttribute__Alternatives");
			builder.put(grammarAccess.getInstrAttributeAccess().getAlternatives(), "rule__InstrAttribute__Alternatives");
			builder.put(grammarAccess.getStructOrUnionAccess().getAlternatives(), "rule__StructOrUnion__Alternatives");
			builder.put(grammarAccess.getBitfieldDataTypeAccess().getAlternatives(), "rule__BitfieldDataType__Alternatives");
			builder.put(grammarAccess.getDescriptionContentAccess().getGroup(), "rule__DescriptionContent__Group__0");
			builder.put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
			builder.put(grammarAccess.getInstructionSetAccess().getGroup(), "rule__InstructionSet__Group__0");
			builder.put(grammarAccess.getInstructionSetAccess().getGroup_2(), "rule__InstructionSet__Group_2__0");
			builder.put(grammarAccess.getInstructionSetAccess().getGroup_4(), "rule__InstructionSet__Group_4__0");
			builder.put(grammarAccess.getInstructionSetAccess().getGroup_5(), "rule__InstructionSet__Group_5__0");
			builder.put(grammarAccess.getInstructionSetAccess().getGroup_6(), "rule__InstructionSet__Group_6__0");
			builder.put(grammarAccess.getInstructionSetAccess().getGroup_7(), "rule__InstructionSet__Group_7__0");
			builder.put(grammarAccess.getInstructionSetAccess().getGroup_8(), "rule__InstructionSet__Group_8__0");
			builder.put(grammarAccess.getCoreDefAccess().getGroup(), "rule__CoreDef__Group__0");
			builder.put(grammarAccess.getCoreDefAccess().getGroup_2(), "rule__CoreDef__Group_2__0");
			builder.put(grammarAccess.getCoreDefAccess().getGroup_2_2(), "rule__CoreDef__Group_2_2__0");
			builder.put(grammarAccess.getCoreDefAccess().getGroup_4(), "rule__CoreDef__Group_4__0");
			builder.put(grammarAccess.getCoreDefAccess().getGroup_5(), "rule__CoreDef__Group_5__0");
			builder.put(grammarAccess.getCoreDefAccess().getGroup_6(), "rule__CoreDef__Group_6__0");
			builder.put(grammarAccess.getCoreDefAccess().getGroup_7(), "rule__CoreDef__Group_7__0");
			builder.put(grammarAccess.getInstructionAccess().getGroup(), "rule__Instruction__Group__0");
			builder.put(grammarAccess.getInstructionAccess().getGroup_1(), "rule__Instruction__Group_1__0");
			builder.put(grammarAccess.getInstructionAccess().getGroup_3(), "rule__Instruction__Group_3__0");
			builder.put(grammarAccess.getInstructionAccess().getGroup_4(), "rule__Instruction__Group_4__0");
			builder.put(grammarAccess.getInstructionAccess().getGroup_5(), "rule__Instruction__Group_5__0");
			builder.put(grammarAccess.getEncodingAccess().getGroup(), "rule__Encoding__Group__0");
			builder.put(grammarAccess.getEncodingAccess().getGroup_1(), "rule__Encoding__Group_1__0");
			builder.put(grammarAccess.getBitFieldAccess().getGroup(), "rule__BitField__Group__0");
			builder.put(grammarAccess.getBitFieldAccess().getGroup_2(), "rule__BitField__Group_2__0");
			builder.put(grammarAccess.getRangeSpecAccess().getGroup(), "rule__RangeSpec__Group__0");
			builder.put(grammarAccess.getFunctionDefinitionAccess().getGroup_0(), "rule__FunctionDefinition__Group_0__0");
			builder.put(grammarAccess.getFunctionDefinitionAccess().getGroup_1(), "rule__FunctionDefinition__Group_1__0");
			builder.put(grammarAccess.getParameterListAccess().getGroup(), "rule__ParameterList__Group__0");
			builder.put(grammarAccess.getParameterListAccess().getGroup_1(), "rule__ParameterList__Group_1__0");
			builder.put(grammarAccess.getParameterDeclarationAccess().getGroup(), "rule__ParameterDeclaration__Group__0");
			builder.put(grammarAccess.getLabeledStatementAccess().getGroup_0(), "rule__LabeledStatement__Group_0__0");
			builder.put(grammarAccess.getLabeledStatementAccess().getGroup_1(), "rule__LabeledStatement__Group_1__0");
			builder.put(grammarAccess.getCompoundStatementAccess().getGroup(), "rule__CompoundStatement__Group__0");
			builder.put(grammarAccess.getExpressionStatementAccess().getGroup(), "rule__ExpressionStatement__Group__0");
			builder.put(grammarAccess.getIfStatementAccess().getGroup(), "rule__IfStatement__Group__0");
			builder.put(grammarAccess.getIfStatementAccess().getGroup_5(), "rule__IfStatement__Group_5__0");
			builder.put(grammarAccess.getSwitchStatementAccess().getGroup(), "rule__SwitchStatement__Group__0");
			builder.put(grammarAccess.getIterationStatementAccess().getGroup_0(), "rule__IterationStatement__Group_0__0");
			builder.put(grammarAccess.getIterationStatementAccess().getGroup_1(), "rule__IterationStatement__Group_1__0");
			builder.put(grammarAccess.getIterationStatementAccess().getGroup_2(), "rule__IterationStatement__Group_2__0");
			builder.put(grammarAccess.getForConditionAccess().getGroup(), "rule__ForCondition__Group__0");
			builder.put(grammarAccess.getForConditionAccess().getGroup_0_1(), "rule__ForCondition__Group_0_1__0");
			builder.put(grammarAccess.getForConditionAccess().getGroup_3(), "rule__ForCondition__Group_3__0");
			builder.put(grammarAccess.getForConditionAccess().getGroup_3_1(), "rule__ForCondition__Group_3_1__0");
			builder.put(grammarAccess.getJumpStatementAccess().getGroup_0(), "rule__JumpStatement__Group_0__0");
			builder.put(grammarAccess.getJumpStatementAccess().getGroup_1(), "rule__JumpStatement__Group_1__0");
			builder.put(grammarAccess.getJumpStatementAccess().getGroup_2(), "rule__JumpStatement__Group_2__0");
			builder.put(grammarAccess.getSpawnStatementAccess().getGroup(), "rule__SpawnStatement__Group__0");
			builder.put(grammarAccess.getDeclarationAccess().getGroup(), "rule__Declaration__Group__0");
			builder.put(grammarAccess.getDeclarationAccess().getGroup_4(), "rule__Declaration__Group_4__0");
			builder.put(grammarAccess.getDeclarationAccess().getGroup_4_1(), "rule__Declaration__Group_4_1__0");
			builder.put(grammarAccess.getAttributeAccess().getGroup(), "rule__Attribute__Group__0");
			builder.put(grammarAccess.getAttributeAccess().getGroup_2(), "rule__Attribute__Group_2__0");
			builder.put(grammarAccess.getBitSizeSpecifierAccess().getGroup(), "rule__BitSizeSpecifier__Group__0");
			builder.put(grammarAccess.getBitSizeSpecifierAccess().getGroup_2(), "rule__BitSizeSpecifier__Group_2__0");
			builder.put(grammarAccess.getEnumSpecifierAccess().getGroup_0(), "rule__EnumSpecifier__Group_0__0");
			builder.put(grammarAccess.getEnumSpecifierAccess().getGroup_1(), "rule__EnumSpecifier__Group_1__0");
			builder.put(grammarAccess.getEnumeratorListAccess().getGroup(), "rule__EnumeratorList__Group__0");
			builder.put(grammarAccess.getEnumeratorListAccess().getGroup_1(), "rule__EnumeratorList__Group_1__0");
			builder.put(grammarAccess.getEnumeratorAccess().getGroup_1(), "rule__Enumerator__Group_1__0");
			builder.put(grammarAccess.getStructOrUnionSpecifierAccess().getGroup_0(), "rule__StructOrUnionSpecifier__Group_0__0");
			builder.put(grammarAccess.getStructOrUnionSpecifierAccess().getGroup_1(), "rule__StructOrUnionSpecifier__Group_1__0");
			builder.put(grammarAccess.getStructDeclarationAccess().getGroup(), "rule__StructDeclaration__Group__0");
			builder.put(grammarAccess.getStructDeclarationAccess().getGroup_2(), "rule__StructDeclaration__Group_2__0");
			builder.put(grammarAccess.getInitDeclaratorAccess().getGroup(), "rule__InitDeclarator__Group__0");
			builder.put(grammarAccess.getInitDeclaratorAccess().getGroup_2(), "rule__InitDeclarator__Group_2__0");
			builder.put(grammarAccess.getDirectDeclaratorAccess().getGroup(), "rule__DirectDeclarator__Group__0");
			builder.put(grammarAccess.getDirectDeclaratorAccess().getGroup_1(), "rule__DirectDeclarator__Group_1__0");
			builder.put(grammarAccess.getDirectDeclaratorAccess().getGroup_2_0(), "rule__DirectDeclarator__Group_2_0__0");
			builder.put(grammarAccess.getDirectDeclaratorAccess().getGroup_2_0_1(), "rule__DirectDeclarator__Group_2_0_1__0");
			builder.put(grammarAccess.getDirectDeclaratorAccess().getGroup_2_1(), "rule__DirectDeclarator__Group_2_1__0");
			builder.put(grammarAccess.getInitializerAccess().getGroup_1(), "rule__Initializer__Group_1__0");
			builder.put(grammarAccess.getInitializerListAccess().getGroup(), "rule__InitializerList__Group__0");
			builder.put(grammarAccess.getInitializerListAccess().getGroup_1(), "rule__InitializerList__Group_1__0");
			builder.put(grammarAccess.getDesignatedInitializerAccess().getGroup(), "rule__DesignatedInitializer__Group__0");
			builder.put(grammarAccess.getDesignatorAccess().getGroup_0(), "rule__Designator__Group_0__0");
			builder.put(grammarAccess.getDesignatorAccess().getGroup_1(), "rule__Designator__Group_1__0");
			builder.put(grammarAccess.getDirectAbstractDeclaratorAccess().getGroup_0(), "rule__DirectAbstractDeclarator__Group_0__0");
			builder.put(grammarAccess.getDirectAbstractDeclaratorAccess().getGroup_1(), "rule__DirectAbstractDeclarator__Group_1__0");
			builder.put(grammarAccess.getExpressionAccess().getGroup(), "rule__Expression__Group__0");
			builder.put(grammarAccess.getExpressionAccess().getGroup_1(), "rule__Expression__Group_1__0");
			builder.put(grammarAccess.getAssignmentExpressionAccess().getGroup(), "rule__AssignmentExpression__Group__0");
			builder.put(grammarAccess.getAssignmentExpressionAccess().getGroup_1(), "rule__AssignmentExpression__Group_1__0");
			builder.put(grammarAccess.getAssignmentExpression2Access().getGroup(), "rule__AssignmentExpression2__Group__0");
			builder.put(grammarAccess.getAssignmentExpression2Access().getGroup_1(), "rule__AssignmentExpression2__Group_1__0");
			builder.put(grammarAccess.getConditionalExpressionAccess().getGroup(), "rule__ConditionalExpression__Group__0");
			builder.put(grammarAccess.getConditionalExpressionAccess().getGroup_1(), "rule__ConditionalExpression__Group_1__0");
			builder.put(grammarAccess.getConcatenationExpressionAccess().getGroup(), "rule__ConcatenationExpression__Group__0");
			builder.put(grammarAccess.getConcatenationExpressionAccess().getGroup_1(), "rule__ConcatenationExpression__Group_1__0");
			builder.put(grammarAccess.getLogicalOrExpressionAccess().getGroup(), "rule__LogicalOrExpression__Group__0");
			builder.put(grammarAccess.getLogicalOrExpressionAccess().getGroup_1(), "rule__LogicalOrExpression__Group_1__0");
			builder.put(grammarAccess.getLogicalAndExpressionAccess().getGroup(), "rule__LogicalAndExpression__Group__0");
			builder.put(grammarAccess.getLogicalAndExpressionAccess().getGroup_1(), "rule__LogicalAndExpression__Group_1__0");
			builder.put(grammarAccess.getInclusiveOrExpressionAccess().getGroup(), "rule__InclusiveOrExpression__Group__0");
			builder.put(grammarAccess.getInclusiveOrExpressionAccess().getGroup_1(), "rule__InclusiveOrExpression__Group_1__0");
			builder.put(grammarAccess.getExclusiveOrExpressionAccess().getGroup(), "rule__ExclusiveOrExpression__Group__0");
			builder.put(grammarAccess.getExclusiveOrExpressionAccess().getGroup_1(), "rule__ExclusiveOrExpression__Group_1__0");
			builder.put(grammarAccess.getAndExpressionAccess().getGroup(), "rule__AndExpression__Group__0");
			builder.put(grammarAccess.getAndExpressionAccess().getGroup_1(), "rule__AndExpression__Group_1__0");
			builder.put(grammarAccess.getEqualityExpressionAccess().getGroup(), "rule__EqualityExpression__Group__0");
			builder.put(grammarAccess.getEqualityExpressionAccess().getGroup_1(), "rule__EqualityExpression__Group_1__0");
			builder.put(grammarAccess.getRelationalExpressionAccess().getGroup(), "rule__RelationalExpression__Group__0");
			builder.put(grammarAccess.getRelationalExpressionAccess().getGroup_1(), "rule__RelationalExpression__Group_1__0");
			builder.put(grammarAccess.getShiftExpressionAccess().getGroup(), "rule__ShiftExpression__Group__0");
			builder.put(grammarAccess.getShiftExpressionAccess().getGroup_1(), "rule__ShiftExpression__Group_1__0");
			builder.put(grammarAccess.getAdditiveExpressionAccess().getGroup(), "rule__AdditiveExpression__Group__0");
			builder.put(grammarAccess.getAdditiveExpressionAccess().getGroup_1(), "rule__AdditiveExpression__Group_1__0");
			builder.put(grammarAccess.getMultiplicativeExpressionAccess().getGroup(), "rule__MultiplicativeExpression__Group__0");
			builder.put(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1(), "rule__MultiplicativeExpression__Group_1__0");
			builder.put(grammarAccess.getCastExpressionAccess().getGroup_1(), "rule__CastExpression__Group_1__0");
			builder.put(grammarAccess.getPrefixExpressionAccess().getGroup_1(), "rule__PrefixExpression__Group_1__0");
			builder.put(grammarAccess.getPrefixExpressionAccess().getGroup_2(), "rule__PrefixExpression__Group_2__0");
			builder.put(grammarAccess.getPrefixExpressionAccess().getGroup_3(), "rule__PrefixExpression__Group_3__0");
			builder.put(grammarAccess.getPrefixExpressionAccess().getGroup_4(), "rule__PrefixExpression__Group_4__0");
			builder.put(grammarAccess.getPostfixExpressionAccess().getGroup(), "rule__PostfixExpression__Group__0");
			builder.put(grammarAccess.getPostfixExpressionAccess().getGroup_1(), "rule__PostfixExpression__Group_1__0");
			builder.put(grammarAccess.getPostfixOperatorAccess().getGroup_0(), "rule__PostfixOperator__Group_0__0");
			builder.put(grammarAccess.getPostfixOperatorAccess().getGroup_0_2(), "rule__PostfixOperator__Group_0_2__0");
			builder.put(grammarAccess.getPostfixOperatorAccess().getGroup_1(), "rule__PostfixOperator__Group_1__0");
			builder.put(grammarAccess.getPostfixOperatorAccess().getGroup_1_1(), "rule__PostfixOperator__Group_1_1__0");
			builder.put(grammarAccess.getPostfixOperatorAccess().getGroup_1_1_1(), "rule__PostfixOperator__Group_1_1_1__0");
			builder.put(grammarAccess.getPostfixOperatorAccess().getGroup_2(), "rule__PostfixOperator__Group_2__0");
			builder.put(grammarAccess.getPostfixOperatorAccess().getGroup_3(), "rule__PostfixOperator__Group_3__0");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getGroup_3(), "rule__PrimaryExpression__Group_3__0");
			builder.put(grammarAccess.getStringLiteralAccess().getGroup(), "rule__StringLiteral__Group__0");
			builder.put(grammarAccess.getCharacterConstantAccess().getGroup_1(), "rule__CharacterConstant__Group_1__0");
			builder.put(grammarAccess.getCharacterConstantAccess().getGroup_2(), "rule__CharacterConstant__Group_2__0");
			builder.put(grammarAccess.getCharacterConstantAccess().getGroup_3(), "rule__CharacterConstant__Group_3__0");
			builder.put(grammarAccess.getDoubleLeftBracketAccess().getGroup(), "rule__DoubleLeftBracket__Group__0");
			builder.put(grammarAccess.getDoubleRightBracketAccess().getGroup(), "rule__DoubleRightBracket__Group__0");
			builder.put(grammarAccess.getDescriptionContentAccess().getImportsAssignment_0(), "rule__DescriptionContent__ImportsAssignment_0");
			builder.put(grammarAccess.getDescriptionContentAccess().getDefinitionsAssignment_1(), "rule__DescriptionContent__DefinitionsAssignment_1");
			builder.put(grammarAccess.getImportAccess().getImportURIAssignment_1(), "rule__Import__ImportURIAssignment_1");
			builder.put(grammarAccess.getInstructionSetAccess().getNameAssignment_1(), "rule__InstructionSet__NameAssignment_1");
			builder.put(grammarAccess.getInstructionSetAccess().getSuperTypeAssignment_2_1(), "rule__InstructionSet__SuperTypeAssignment_2_1");
			builder.put(grammarAccess.getInstructionSetAccess().getConstantsAssignment_4_2(), "rule__InstructionSet__ConstantsAssignment_4_2");
			builder.put(grammarAccess.getInstructionSetAccess().getRegsAssignment_5_2(), "rule__InstructionSet__RegsAssignment_5_2");
			builder.put(grammarAccess.getInstructionSetAccess().getSpacesAssignment_6_2(), "rule__InstructionSet__SpacesAssignment_6_2");
			builder.put(grammarAccess.getInstructionSetAccess().getFuncAssignment_7_2(), "rule__InstructionSet__FuncAssignment_7_2");
			builder.put(grammarAccess.getInstructionSetAccess().getInstrAssignment_8_2(), "rule__InstructionSet__InstrAssignment_8_2");
			builder.put(grammarAccess.getCoreDefAccess().getNameAssignment_1(), "rule__CoreDef__NameAssignment_1");
			builder.put(grammarAccess.getCoreDefAccess().getContributingTypeAssignment_2_1(), "rule__CoreDef__ContributingTypeAssignment_2_1");
			builder.put(grammarAccess.getCoreDefAccess().getContributingTypeAssignment_2_2_1(), "rule__CoreDef__ContributingTypeAssignment_2_2_1");
			builder.put(grammarAccess.getCoreDefAccess().getConstantsAssignment_4_2(), "rule__CoreDef__ConstantsAssignment_4_2");
			builder.put(grammarAccess.getCoreDefAccess().getRegsAssignment_5_2(), "rule__CoreDef__RegsAssignment_5_2");
			builder.put(grammarAccess.getCoreDefAccess().getSpacesAssignment_6_2(), "rule__CoreDef__SpacesAssignment_6_2");
			builder.put(grammarAccess.getCoreDefAccess().getInstrAssignment_7_2(), "rule__CoreDef__InstrAssignment_7_2");
			builder.put(grammarAccess.getInstructionAccess().getNameAssignment_0(), "rule__Instruction__NameAssignment_0");
			builder.put(grammarAccess.getInstructionAccess().getAttributesAssignment_1_1(), "rule__Instruction__AttributesAssignment_1_1");
			builder.put(grammarAccess.getInstructionAccess().getEncodingAssignment_3_2(), "rule__Instruction__EncodingAssignment_3_2");
			builder.put(grammarAccess.getInstructionAccess().getDisassAssignment_4_2(), "rule__Instruction__DisassAssignment_4_2");
			builder.put(grammarAccess.getInstructionAccess().getBehaviorAssignment_5_2(), "rule__Instruction__BehaviorAssignment_5_2");
			builder.put(grammarAccess.getEncodingAccess().getFieldsAssignment_0(), "rule__Encoding__FieldsAssignment_0");
			builder.put(grammarAccess.getEncodingAccess().getFieldsAssignment_1_1(), "rule__Encoding__FieldsAssignment_1_1");
			builder.put(grammarAccess.getBitValueAccess().getNameAssignment(), "rule__BitValue__NameAssignment");
			builder.put(grammarAccess.getBitFieldAccess().getNameAssignment_0(), "rule__BitField__NameAssignment_0");
			builder.put(grammarAccess.getBitFieldAccess().getBitRangeAssignment_1(), "rule__BitField__BitRangeAssignment_1");
			builder.put(grammarAccess.getBitFieldAccess().getTypeAssignment_2_1(), "rule__BitField__TypeAssignment_2_1");
			builder.put(grammarAccess.getRangeSpecAccess().getLeftAssignment_1(), "rule__RangeSpec__LeftAssignment_1");
			builder.put(grammarAccess.getRangeSpecAccess().getRightAssignment_3(), "rule__RangeSpec__RightAssignment_3");
			builder.put(grammarAccess.getFunctionDefinitionAccess().getExternAssignment_0_0(), "rule__FunctionDefinition__ExternAssignment_0_0");
			builder.put(grammarAccess.getFunctionDefinitionAccess().getTypeAssignment_0_1(), "rule__FunctionDefinition__TypeAssignment_0_1");
			builder.put(grammarAccess.getFunctionDefinitionAccess().getNameAssignment_0_2(), "rule__FunctionDefinition__NameAssignment_0_2");
			builder.put(grammarAccess.getFunctionDefinitionAccess().getTypeAssignment_1_0(), "rule__FunctionDefinition__TypeAssignment_1_0");
			builder.put(grammarAccess.getFunctionDefinitionAccess().getNameAssignment_1_1(), "rule__FunctionDefinition__NameAssignment_1_1");
			builder.put(grammarAccess.getFunctionDefinitionAccess().getStatementAssignment_1_5(), "rule__FunctionDefinition__StatementAssignment_1_5");
			builder.put(grammarAccess.getParameterListAccess().getParamsAssignment_0(), "rule__ParameterList__ParamsAssignment_0");
			builder.put(grammarAccess.getParameterListAccess().getParametersAssignment_1_1(), "rule__ParameterList__ParametersAssignment_1_1");
			builder.put(grammarAccess.getParameterDeclarationAccess().getTypeAssignment_0(), "rule__ParameterDeclaration__TypeAssignment_0");
			builder.put(grammarAccess.getParameterDeclarationAccess().getDeclaratorAssignment_1_0(), "rule__ParameterDeclaration__DeclaratorAssignment_1_0");
			builder.put(grammarAccess.getParameterDeclarationAccess().getDeclaratorAssignment_1_1(), "rule__ParameterDeclaration__DeclaratorAssignment_1_1");
			builder.put(grammarAccess.getLabeledStatementAccess().getConstExprAssignment_0_1(), "rule__LabeledStatement__ConstExprAssignment_0_1");
			builder.put(grammarAccess.getLabeledStatementAccess().getStmtAssignment_0_3(), "rule__LabeledStatement__StmtAssignment_0_3");
			builder.put(grammarAccess.getLabeledStatementAccess().getStmtAssignment_1_2(), "rule__LabeledStatement__StmtAssignment_1_2");
			builder.put(grammarAccess.getCompoundStatementAccess().getItemsAssignment_2(), "rule__CompoundStatement__ItemsAssignment_2");
			builder.put(grammarAccess.getExpressionStatementAccess().getExprAssignment_1(), "rule__ExpressionStatement__ExprAssignment_1");
			builder.put(grammarAccess.getIfStatementAccess().getCondAssignment_2(), "rule__IfStatement__CondAssignment_2");
			builder.put(grammarAccess.getIfStatementAccess().getThenStmtAssignment_4(), "rule__IfStatement__ThenStmtAssignment_4");
			builder.put(grammarAccess.getIfStatementAccess().getElseStmtAssignment_5_1(), "rule__IfStatement__ElseStmtAssignment_5_1");
			builder.put(grammarAccess.getSwitchStatementAccess().getCondAssignment_2(), "rule__SwitchStatement__CondAssignment_2");
			builder.put(grammarAccess.getSwitchStatementAccess().getItemsAssignment_5(), "rule__SwitchStatement__ItemsAssignment_5");
			builder.put(grammarAccess.getIterationStatementAccess().getTypeAssignment_0_0(), "rule__IterationStatement__TypeAssignment_0_0");
			builder.put(grammarAccess.getIterationStatementAccess().getCondAssignment_0_2(), "rule__IterationStatement__CondAssignment_0_2");
			builder.put(grammarAccess.getIterationStatementAccess().getStmtAssignment_0_4(), "rule__IterationStatement__StmtAssignment_0_4");
			builder.put(grammarAccess.getIterationStatementAccess().getTypeAssignment_1_0(), "rule__IterationStatement__TypeAssignment_1_0");
			builder.put(grammarAccess.getIterationStatementAccess().getStmtAssignment_1_1(), "rule__IterationStatement__StmtAssignment_1_1");
			builder.put(grammarAccess.getIterationStatementAccess().getCondAssignment_1_4(), "rule__IterationStatement__CondAssignment_1_4");
			builder.put(grammarAccess.getIterationStatementAccess().getTypeAssignment_2_0(), "rule__IterationStatement__TypeAssignment_2_0");
			builder.put(grammarAccess.getIterationStatementAccess().getStmtAssignment_2_4(), "rule__IterationStatement__StmtAssignment_2_4");
			builder.put(grammarAccess.getForConditionAccess().getStartDeclAssignment_0_0(), "rule__ForCondition__StartDeclAssignment_0_0");
			builder.put(grammarAccess.getForConditionAccess().getStartExprAssignment_0_1_0(), "rule__ForCondition__StartExprAssignment_0_1_0");
			builder.put(grammarAccess.getForConditionAccess().getEndExprAssignment_1(), "rule__ForCondition__EndExprAssignment_1");
			builder.put(grammarAccess.getForConditionAccess().getLoopExprsAssignment_3_0(), "rule__ForCondition__LoopExprsAssignment_3_0");
			builder.put(grammarAccess.getForConditionAccess().getLoopExprsAssignment_3_1_1(), "rule__ForCondition__LoopExprsAssignment_3_1_1");
			builder.put(grammarAccess.getJumpStatementAccess().getTypeAssignment_0_0(), "rule__JumpStatement__TypeAssignment_0_0");
			builder.put(grammarAccess.getJumpStatementAccess().getTypeAssignment_1_0(), "rule__JumpStatement__TypeAssignment_1_0");
			builder.put(grammarAccess.getJumpStatementAccess().getTypeAssignment_2_0(), "rule__JumpStatement__TypeAssignment_2_0");
			builder.put(grammarAccess.getJumpStatementAccess().getExprAssignment_2_1(), "rule__JumpStatement__ExprAssignment_2_1");
			builder.put(grammarAccess.getSpawnStatementAccess().getStmtAssignment_1(), "rule__SpawnStatement__StmtAssignment_1");
			builder.put(grammarAccess.getDeclarationAccess().getTypeAssignment_1(), "rule__Declaration__TypeAssignment_1");
			builder.put(grammarAccess.getDeclarationAccess().getSizeAssignment_2(), "rule__Declaration__SizeAssignment_2");
			builder.put(grammarAccess.getDeclarationAccess().getPtrAssignment_3(), "rule__Declaration__PtrAssignment_3");
			builder.put(grammarAccess.getDeclarationAccess().getInitAssignment_4_0(), "rule__Declaration__InitAssignment_4_0");
			builder.put(grammarAccess.getDeclarationAccess().getInitAssignment_4_1_1(), "rule__Declaration__InitAssignment_4_1_1");
			builder.put(grammarAccess.getDeclarationSpecifierAccess().getStorageAssignment_0(), "rule__DeclarationSpecifier__StorageAssignment_0");
			builder.put(grammarAccess.getDeclarationSpecifierAccess().getQualifiersAssignment_1(), "rule__DeclarationSpecifier__QualifiersAssignment_1");
			builder.put(grammarAccess.getDeclarationSpecifierAccess().getAttrsAssignment_2(), "rule__DeclarationSpecifier__AttrsAssignment_2");
			builder.put(grammarAccess.getAttributeAccess().getTypeAssignment_1(), "rule__Attribute__TypeAssignment_1");
			builder.put(grammarAccess.getAttributeAccess().getValueAssignment_2_1(), "rule__Attribute__ValueAssignment_2_1");
			builder.put(grammarAccess.getPodSpecifierAccess().getDataTypeAssignment(), "rule__PodSpecifier__DataTypeAssignment");
			builder.put(grammarAccess.getBitSizeSpecifierAccess().getSizeAssignment_1(), "rule__BitSizeSpecifier__SizeAssignment_1");
			builder.put(grammarAccess.getBitSizeSpecifierAccess().getSizeAssignment_2_1(), "rule__BitSizeSpecifier__SizeAssignment_2_1");
			builder.put(grammarAccess.getBitSizeSpecifierAccess().getSizeAssignment_2_3(), "rule__BitSizeSpecifier__SizeAssignment_2_3");
			builder.put(grammarAccess.getBitSizeSpecifierAccess().getSizeAssignment_2_5(), "rule__BitSizeSpecifier__SizeAssignment_2_5");
			builder.put(grammarAccess.getEnumSpecifierAccess().getNameAssignment_0_1(), "rule__EnumSpecifier__NameAssignment_0_1");
			builder.put(grammarAccess.getEnumSpecifierAccess().getNameAssignment_1_1(), "rule__EnumSpecifier__NameAssignment_1_1");
			builder.put(grammarAccess.getEnumeratorListAccess().getEnumeratorsAssignment_0(), "rule__EnumeratorList__EnumeratorsAssignment_0");
			builder.put(grammarAccess.getEnumeratorListAccess().getEnumeratorsAssignment_1_1(), "rule__EnumeratorList__EnumeratorsAssignment_1_1");
			builder.put(grammarAccess.getEnumeratorAccess().getNameAssignment_0(), "rule__Enumerator__NameAssignment_0");
			builder.put(grammarAccess.getEnumeratorAccess().getNameAssignment_1_0(), "rule__Enumerator__NameAssignment_1_0");
			builder.put(grammarAccess.getEnumeratorAccess().getExpressionAssignment_1_2(), "rule__Enumerator__ExpressionAssignment_1_2");
			builder.put(grammarAccess.getStructOrUnionSpecifierAccess().getComposeTypeAssignment_0_0(), "rule__StructOrUnionSpecifier__ComposeTypeAssignment_0_0");
			builder.put(grammarAccess.getStructOrUnionSpecifierAccess().getNameAssignment_0_1(), "rule__StructOrUnionSpecifier__NameAssignment_0_1");
			builder.put(grammarAccess.getStructOrUnionSpecifierAccess().getDeclsAssignment_0_3(), "rule__StructOrUnionSpecifier__DeclsAssignment_0_3");
			builder.put(grammarAccess.getStructOrUnionSpecifierAccess().getComposeTypeAssignment_1_0(), "rule__StructOrUnionSpecifier__ComposeTypeAssignment_1_0");
			builder.put(grammarAccess.getStructOrUnionSpecifierAccess().getNameAssignment_1_1(), "rule__StructOrUnionSpecifier__NameAssignment_1_1");
			builder.put(grammarAccess.getStructDeclarationAccess().getSpecifierAssignment_0(), "rule__StructDeclaration__SpecifierAssignment_0");
			builder.put(grammarAccess.getStructDeclarationAccess().getDeclsAssignment_1(), "rule__StructDeclaration__DeclsAssignment_1");
			builder.put(grammarAccess.getStructDeclarationAccess().getDeclsAssignment_2_1(), "rule__StructDeclaration__DeclsAssignment_2_1");
			builder.put(grammarAccess.getStructDeclarationSpecifierAccess().getTypeAssignment_0(), "rule__StructDeclarationSpecifier__TypeAssignment_0");
			builder.put(grammarAccess.getStructDeclarationSpecifierAccess().getQualifiersAssignment_1(), "rule__StructDeclarationSpecifier__QualifiersAssignment_1");
			builder.put(grammarAccess.getInitDeclaratorAccess().getDeclaratorAssignment_0(), "rule__InitDeclarator__DeclaratorAssignment_0");
			builder.put(grammarAccess.getInitDeclaratorAccess().getAttrsAssignment_1(), "rule__InitDeclarator__AttrsAssignment_1");
			builder.put(grammarAccess.getInitDeclaratorAccess().getInitializerAssignment_2_1(), "rule__InitDeclarator__InitializerAssignment_2_1");
			builder.put(grammarAccess.getDirectDeclaratorAccess().getNameAssignment_0(), "rule__DirectDeclarator__NameAssignment_0");
			builder.put(grammarAccess.getDirectDeclaratorAccess().getIndexAssignment_1_1(), "rule__DirectDeclarator__IndexAssignment_1_1");
			builder.put(grammarAccess.getDirectDeclaratorAccess().getSizeAssignment_2_0_1_1(), "rule__DirectDeclarator__SizeAssignment_2_0_1_1");
			builder.put(grammarAccess.getInitializerAccess().getExprAssignment_0(), "rule__Initializer__ExprAssignment_0");
			builder.put(grammarAccess.getInitializerListAccess().getInitAssignment_0(), "rule__InitializerList__InitAssignment_0");
			builder.put(grammarAccess.getInitializerListAccess().getInitAssignment_1_1(), "rule__InitializerList__InitAssignment_1_1");
			builder.put(grammarAccess.getDesignatedInitializerAccess().getDesignatorsAssignment_0(), "rule__DesignatedInitializer__DesignatorsAssignment_0");
			builder.put(grammarAccess.getDesignatedInitializerAccess().getInitAssignment_2(), "rule__DesignatedInitializer__InitAssignment_2");
			builder.put(grammarAccess.getDesignatorAccess().getIdxAssignment_0_1(), "rule__Designator__IdxAssignment_0_1");
			builder.put(grammarAccess.getDesignatorAccess().getPropAssignment_1_1(), "rule__Designator__PropAssignment_1_1");
			builder.put(grammarAccess.getDirectAbstractDeclaratorAccess().getDeclaratorAssignment_0_2_0(), "rule__DirectAbstractDeclarator__DeclaratorAssignment_0_2_0");
			builder.put(grammarAccess.getDirectAbstractDeclaratorAccess().getExprAssignment_1_2(), "rule__DirectAbstractDeclarator__ExprAssignment_1_2");
			builder.put(grammarAccess.getExpressionAccess().getRightAssignment_1_2(), "rule__Expression__RightAssignment_1_2");
			builder.put(grammarAccess.getAssignmentExpressionAccess().getAssignmentAssignment_1_1(), "rule__AssignmentExpression__AssignmentAssignment_1_1");
			builder.put(grammarAccess.getAssignmentExpressionAccess().getRightsAssignment_1_2(), "rule__AssignmentExpression__RightsAssignment_1_2");
			builder.put(grammarAccess.getAssignmentExpression2Access().getAssignmentAssignment_1_1(), "rule__AssignmentExpression2__AssignmentAssignment_1_1");
			builder.put(grammarAccess.getAssignmentExpression2Access().getRightsAssignment_1_2(), "rule__AssignmentExpression2__RightsAssignment_1_2");
			builder.put(grammarAccess.getConditionalExpressionAccess().getLeftAssignment_1_2(), "rule__ConditionalExpression__LeftAssignment_1_2");
			builder.put(grammarAccess.getConditionalExpressionAccess().getRightAssignment_1_4(), "rule__ConditionalExpression__RightAssignment_1_4");
			builder.put(grammarAccess.getConcatenationExpressionAccess().getOpAssignment_1_1(), "rule__ConcatenationExpression__OpAssignment_1_1");
			builder.put(grammarAccess.getConcatenationExpressionAccess().getRightAssignment_1_2(), "rule__ConcatenationExpression__RightAssignment_1_2");
			builder.put(grammarAccess.getLogicalOrExpressionAccess().getOpAssignment_1_1(), "rule__LogicalOrExpression__OpAssignment_1_1");
			builder.put(grammarAccess.getLogicalOrExpressionAccess().getRightAssignment_1_2(), "rule__LogicalOrExpression__RightAssignment_1_2");
			builder.put(grammarAccess.getLogicalAndExpressionAccess().getOpAssignment_1_1(), "rule__LogicalAndExpression__OpAssignment_1_1");
			builder.put(grammarAccess.getLogicalAndExpressionAccess().getRightAssignment_1_2(), "rule__LogicalAndExpression__RightAssignment_1_2");
			builder.put(grammarAccess.getInclusiveOrExpressionAccess().getOpAssignment_1_1(), "rule__InclusiveOrExpression__OpAssignment_1_1");
			builder.put(grammarAccess.getInclusiveOrExpressionAccess().getRightAssignment_1_2(), "rule__InclusiveOrExpression__RightAssignment_1_2");
			builder.put(grammarAccess.getExclusiveOrExpressionAccess().getOpAssignment_1_1(), "rule__ExclusiveOrExpression__OpAssignment_1_1");
			builder.put(grammarAccess.getExclusiveOrExpressionAccess().getRightAssignment_1_2(), "rule__ExclusiveOrExpression__RightAssignment_1_2");
			builder.put(grammarAccess.getAndExpressionAccess().getOpAssignment_1_1(), "rule__AndExpression__OpAssignment_1_1");
			builder.put(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2(), "rule__AndExpression__RightAssignment_1_2");
			builder.put(grammarAccess.getEqualityExpressionAccess().getOpAssignment_1_1(), "rule__EqualityExpression__OpAssignment_1_1");
			builder.put(grammarAccess.getEqualityExpressionAccess().getRightAssignment_1_2(), "rule__EqualityExpression__RightAssignment_1_2");
			builder.put(grammarAccess.getRelationalExpressionAccess().getOpAssignment_1_1(), "rule__RelationalExpression__OpAssignment_1_1");
			builder.put(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1_2(), "rule__RelationalExpression__RightAssignment_1_2");
			builder.put(grammarAccess.getShiftExpressionAccess().getOpAssignment_1_1(), "rule__ShiftExpression__OpAssignment_1_1");
			builder.put(grammarAccess.getShiftExpressionAccess().getRightAssignment_1_2(), "rule__ShiftExpression__RightAssignment_1_2");
			builder.put(grammarAccess.getAdditiveExpressionAccess().getOpAssignment_1_1(), "rule__AdditiveExpression__OpAssignment_1_1");
			builder.put(grammarAccess.getAdditiveExpressionAccess().getRightAssignment_1_2(), "rule__AdditiveExpression__RightAssignment_1_2");
			builder.put(grammarAccess.getMultiplicativeExpressionAccess().getOpAssignment_1_1(), "rule__MultiplicativeExpression__OpAssignment_1_1");
			builder.put(grammarAccess.getMultiplicativeExpressionAccess().getRightAssignment_1_2(), "rule__MultiplicativeExpression__RightAssignment_1_2");
			builder.put(grammarAccess.getCastExpressionAccess().getTypeAssignment_1_1(), "rule__CastExpression__TypeAssignment_1_1");
			builder.put(grammarAccess.getCastExpressionAccess().getSizeAssignment_1_2(), "rule__CastExpression__SizeAssignment_1_2");
			builder.put(grammarAccess.getCastExpressionAccess().getLeftAssignment_1_4(), "rule__CastExpression__LeftAssignment_1_4");
			builder.put(grammarAccess.getPrefixExpressionAccess().getOpAssignment_1_0(), "rule__PrefixExpression__OpAssignment_1_0");
			builder.put(grammarAccess.getPrefixExpressionAccess().getLeftAssignment_1_1(), "rule__PrefixExpression__LeftAssignment_1_1");
			builder.put(grammarAccess.getPrefixExpressionAccess().getOpAssignment_2_0(), "rule__PrefixExpression__OpAssignment_2_0");
			builder.put(grammarAccess.getPrefixExpressionAccess().getLeftAssignment_2_1(), "rule__PrefixExpression__LeftAssignment_2_1");
			builder.put(grammarAccess.getPrefixExpressionAccess().getLeftAssignment_3_1(), "rule__PrefixExpression__LeftAssignment_3_1");
			builder.put(grammarAccess.getPrefixExpressionAccess().getOpAssignment_4_0(), "rule__PrefixExpression__OpAssignment_4_0");
			builder.put(grammarAccess.getPrefixExpressionAccess().getLeftAssignment_4_2_0(), "rule__PrefixExpression__LeftAssignment_4_2_0");
			builder.put(grammarAccess.getPrefixExpressionAccess().getTypeAssignment_4_2_1(), "rule__PrefixExpression__TypeAssignment_4_2_1");
			builder.put(grammarAccess.getUnaryOperatorAccess().getOpAssignment(), "rule__UnaryOperator__OpAssignment");
			builder.put(grammarAccess.getPostfixExpressionAccess().getOpsAssignment_1_1(), "rule__PostfixExpression__OpsAssignment_1_1");
			builder.put(grammarAccess.getPostfixOperatorAccess().getOpAssignment_0_0(), "rule__PostfixOperator__OpAssignment_0_0");
			builder.put(grammarAccess.getPostfixOperatorAccess().getArgsAssignment_0_1(), "rule__PostfixOperator__ArgsAssignment_0_1");
			builder.put(grammarAccess.getPostfixOperatorAccess().getArgsAssignment_0_2_1(), "rule__PostfixOperator__ArgsAssignment_0_2_1");
			builder.put(grammarAccess.getPostfixOperatorAccess().getOpAssignment_1_0(), "rule__PostfixOperator__OpAssignment_1_0");
			builder.put(grammarAccess.getPostfixOperatorAccess().getArgsAssignment_1_1_0(), "rule__PostfixOperator__ArgsAssignment_1_1_0");
			builder.put(grammarAccess.getPostfixOperatorAccess().getArgsAssignment_1_1_1_1(), "rule__PostfixOperator__ArgsAssignment_1_1_1_1");
			builder.put(grammarAccess.getPostfixOperatorAccess().getOpAssignment_2_0(), "rule__PostfixOperator__OpAssignment_2_0");
			builder.put(grammarAccess.getPostfixOperatorAccess().getMemberAssignment_2_1(), "rule__PostfixOperator__MemberAssignment_2_1");
			builder.put(grammarAccess.getPostfixOperatorAccess().getOpAssignment_3_0(), "rule__PostfixOperator__OpAssignment_3_0");
			builder.put(grammarAccess.getPostfixOperatorAccess().getMemberAssignment_3_1(), "rule__PostfixOperator__MemberAssignment_3_1");
			builder.put(grammarAccess.getPostfixOperatorAccess().getOpAssignment_4(), "rule__PostfixOperator__OpAssignment_4");
			builder.put(grammarAccess.getPostfixOperatorAccess().getOpAssignment_5(), "rule__PostfixOperator__OpAssignment_5");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getRefAssignment_0(), "rule__PrimaryExpression__RefAssignment_0");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getConstantAssignment_1(), "rule__PrimaryExpression__ConstantAssignment_1");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getLiteralAssignment_2(), "rule__PrimaryExpression__LiteralAssignment_2");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getLeftAssignment_3_1(), "rule__PrimaryExpression__LeftAssignment_3_1");
			builder.put(grammarAccess.getStringLiteralAccess().getValueAssignment_1(), "rule__StringLiteral__ValueAssignment_1");
			builder.put(grammarAccess.getEncodingPrefixAccess().getPrefixAssignment(), "rule__EncodingPrefix__PrefixAssignment");
			builder.put(grammarAccess.getIntegerConstantAccess().getValueAssignment(), "rule__IntegerConstant__ValueAssignment");
			builder.put(grammarAccess.getFloatingConstantAccess().getValueAssignment(), "rule__FloatingConstant__ValueAssignment");
			builder.put(grammarAccess.getBoolConstantAccess().getValueAssignment(), "rule__BoolConstant__ValueAssignment");
			builder.put(grammarAccess.getCharacterConstantAccess().getValueAssignment_0(), "rule__CharacterConstant__ValueAssignment_0");
			builder.put(grammarAccess.getCharacterConstantAccess().getEncAssignment_1_0(), "rule__CharacterConstant__EncAssignment_1_0");
			builder.put(grammarAccess.getCharacterConstantAccess().getValueAssignment_1_1(), "rule__CharacterConstant__ValueAssignment_1_1");
			builder.put(grammarAccess.getCharacterConstantAccess().getEncAssignment_2_0(), "rule__CharacterConstant__EncAssignment_2_0");
			builder.put(grammarAccess.getCharacterConstantAccess().getValueAssignment_2_1(), "rule__CharacterConstant__ValueAssignment_2_1");
			builder.put(grammarAccess.getCharacterConstantAccess().getEncAssignment_3_0(), "rule__CharacterConstant__EncAssignment_3_0");
			builder.put(grammarAccess.getCharacterConstantAccess().getValueAssignment_3_1(), "rule__CharacterConstant__ValueAssignment_3_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private CoreDslGrammarAccess grammarAccess;

	@Override
	protected InternalCoreDslParser createParser() {
		InternalCoreDslParser result = new InternalCoreDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public CoreDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(CoreDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
