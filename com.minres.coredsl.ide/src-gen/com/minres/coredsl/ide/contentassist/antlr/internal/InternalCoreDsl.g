/*
 * generated by Xtext 2.22.0
 */
grammar InternalCoreDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package com.minres.coredsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.minres.coredsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.minres.coredsl.services.CoreDslGrammarAccess;

}
@parser::members {
	private CoreDslGrammarAccess grammarAccess;

	public void setGrammarAccess(CoreDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleDescriptionContent
entryRuleDescriptionContent
:
{ before(grammarAccess.getDescriptionContentRule()); }
	 ruleDescriptionContent
{ after(grammarAccess.getDescriptionContentRule()); } 
	 EOF 
;

// Rule DescriptionContent
ruleDescriptionContent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDescriptionContentAccess().getGroup()); }
		(rule__DescriptionContent__Group__0)
		{ after(grammarAccess.getDescriptionContentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleISA
entryRuleISA
:
{ before(grammarAccess.getISARule()); }
	 ruleISA
{ after(grammarAccess.getISARule()); } 
	 EOF 
;

// Rule ISA
ruleISA 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getISAAccess().getAlternatives()); }
		(rule__ISA__Alternatives)
		{ after(grammarAccess.getISAAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstructionSet
entryRuleInstructionSet
:
{ before(grammarAccess.getInstructionSetRule()); }
	 ruleInstructionSet
{ after(grammarAccess.getInstructionSetRule()); } 
	 EOF 
;

// Rule InstructionSet
ruleInstructionSet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstructionSetAccess().getGroup()); }
		(rule__InstructionSet__Group__0)
		{ after(grammarAccess.getInstructionSetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCoreDef
entryRuleCoreDef
:
{ before(grammarAccess.getCoreDefRule()); }
	 ruleCoreDef
{ after(grammarAccess.getCoreDefRule()); } 
	 EOF 
;

// Rule CoreDef
ruleCoreDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCoreDefAccess().getGroup()); }
		(rule__CoreDef__Group__0)
		{ after(grammarAccess.getCoreDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRangeSpec
entryRuleRangeSpec
:
{ before(grammarAccess.getRangeSpecRule()); }
	 ruleRangeSpec
{ after(grammarAccess.getRangeSpecRule()); } 
	 EOF 
;

// Rule RangeSpec
ruleRangeSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRangeSpecAccess().getGroup()); }
		(rule__RangeSpec__Group__0)
		{ after(grammarAccess.getRangeSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstruction
entryRuleInstruction
:
{ before(grammarAccess.getInstructionRule()); }
	 ruleInstruction
{ after(grammarAccess.getInstructionRule()); } 
	 EOF 
;

// Rule Instruction
ruleInstruction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstructionAccess().getUnorderedGroup()); }
		(rule__Instruction__UnorderedGroup)
		{ after(grammarAccess.getInstructionAccess().getUnorderedGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEncoding
entryRuleEncoding
:
{ before(grammarAccess.getEncodingRule()); }
	 ruleEncoding
{ after(grammarAccess.getEncodingRule()); } 
	 EOF 
;

// Rule Encoding
ruleEncoding 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEncodingAccess().getGroup()); }
		(rule__Encoding__Group__0)
		{ after(grammarAccess.getEncodingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleField
entryRuleField
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldAccess().getAlternatives()); }
		(rule__Field__Alternatives)
		{ after(grammarAccess.getFieldAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBitValue
entryRuleBitValue
:
{ before(grammarAccess.getBitValueRule()); }
	 ruleBitValue
{ after(grammarAccess.getBitValueRule()); } 
	 EOF 
;

// Rule BitValue
ruleBitValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBitValueAccess().getNameAssignment()); }
		(rule__BitValue__NameAssignment)
		{ after(grammarAccess.getBitValueAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBitField
entryRuleBitField
:
{ before(grammarAccess.getBitFieldRule()); }
	 ruleBitField
{ after(grammarAccess.getBitFieldRule()); } 
	 EOF 
;

// Rule BitField
ruleBitField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBitFieldAccess().getGroup()); }
		(rule__BitField__Group__0)
		{ after(grammarAccess.getBitFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperation
entryRuleOperation
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getOperationAccess().getStatementsAssignment()); }
			(rule__Operation__StatementsAssignment)
			{ after(grammarAccess.getOperationAccess().getStatementsAssignment()); }
		)
		(
			{ before(grammarAccess.getOperationAccess().getStatementsAssignment()); }
			(rule__Operation__StatementsAssignment)*
			{ after(grammarAccess.getOperationAccess().getStatementsAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignment
entryRuleAssignment
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup()); }
		(rule__Assignment__Group__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalStmt
entryRuleConditionalStmt
:
{ before(grammarAccess.getConditionalStmtRule()); }
	 ruleConditionalStmt
{ after(grammarAccess.getConditionalStmtRule()); } 
	 EOF 
;

// Rule ConditionalStmt
ruleConditionalStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalStmtAccess().getGroup()); }
		(rule__ConditionalStmt__Group__0)
		{ after(grammarAccess.getConditionalStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDirectCode
entryRuleDirectCode
:
{ before(grammarAccess.getDirectCodeRule()); }
	 ruleDirectCode
{ after(grammarAccess.getDirectCodeRule()); } 
	 EOF 
;

// Rule DirectCode
ruleDirectCode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDirectCodeAccess().getGroup()); }
		(rule__DirectCode__Group__0)
		{ after(grammarAccess.getDirectCodeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcedure
entryRuleProcedure
:
{ before(grammarAccess.getProcedureRule()); }
	 ruleProcedure
{ after(grammarAccess.getProcedureRule()); } 
	 EOF 
;

// Rule Procedure
ruleProcedure 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcedureAccess().getGroup()); }
		(rule__Procedure__Group__0)
		{ after(grammarAccess.getProcedureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstant
entryRuleConstant
:
{ before(grammarAccess.getConstantRule()); }
	 ruleConstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule Constant
ruleConstant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantAccess().getAlternatives()); }
		(rule__Constant__Alternatives)
		{ after(grammarAccess.getConstantAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstantDef
entryRuleConstantDef
:
{ before(grammarAccess.getConstantDefRule()); }
	 ruleConstantDef
{ after(grammarAccess.getConstantDefRule()); } 
	 EOF 
;

// Rule ConstantDef
ruleConstantDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantDefAccess().getGroup()); }
		(rule__ConstantDef__Group__0)
		{ after(grammarAccess.getConstantDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstantDecl
entryRuleConstantDecl
:
{ before(grammarAccess.getConstantDeclRule()); }
	 ruleConstantDecl
{ after(grammarAccess.getConstantDeclRule()); } 
	 EOF 
;

// Rule ConstantDecl
ruleConstantDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantDeclAccess().getGroup()); }
		(rule__ConstantDecl__Group__0)
		{ after(grammarAccess.getConstantDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstantDefault
entryRuleConstantDefault
:
{ before(grammarAccess.getConstantDefaultRule()); }
	 ruleConstantDefault
{ after(grammarAccess.getConstantDefaultRule()); } 
	 EOF 
;

// Rule ConstantDefault
ruleConstantDefault 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantDefaultAccess().getGroup()); }
		(rule__ConstantDefault__Group__0)
		{ after(grammarAccess.getConstantDefaultAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndexedVariable
entryRuleIndexedVariable
:
{ before(grammarAccess.getIndexedVariableRule()); }
	 ruleIndexedVariable
{ after(grammarAccess.getIndexedVariableRule()); } 
	 EOF 
;

// Rule IndexedVariable
ruleIndexedVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndexedVariableAccess().getAlternatives()); }
		(rule__IndexedVariable__Alternatives)
		{ after(grammarAccess.getIndexedVariableAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScalarVariable
entryRuleScalarVariable
:
{ before(grammarAccess.getScalarVariableRule()); }
	 ruleScalarVariable
{ after(grammarAccess.getScalarVariableRule()); } 
	 EOF 
;

// Rule ScalarVariable
ruleScalarVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScalarVariableAccess().getAlternatives()); }
		(rule__ScalarVariable__Alternatives)
		{ after(grammarAccess.getScalarVariableAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRegisterVariable
entryRuleRegisterVariable
:
{ before(grammarAccess.getRegisterVariableRule()); }
	 ruleRegisterVariable
{ after(grammarAccess.getRegisterVariableRule()); } 
	 EOF 
;

// Rule RegisterVariable
ruleRegisterVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRegisterVariableAccess().getAlternatives()); }
		(rule__RegisterVariable__Alternatives)
		{ after(grammarAccess.getRegisterVariableAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddressSpace
entryRuleAddressSpace
:
{ before(grammarAccess.getAddressSpaceRule()); }
	 ruleAddressSpace
{ after(grammarAccess.getAddressSpaceRule()); } 
	 EOF 
;

// Rule AddressSpace
ruleAddressSpace 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddressSpaceAccess().getGroup()); }
		(rule__AddressSpace__Group__0)
		{ after(grammarAccess.getAddressSpaceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRegisterFile
entryRuleRegisterFile
:
{ before(grammarAccess.getRegisterFileRule()); }
	 ruleRegisterFile
{ after(grammarAccess.getRegisterFileRule()); } 
	 EOF 
;

// Rule RegisterFile
ruleRegisterFile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRegisterFileAccess().getGroup()); }
		(rule__RegisterFile__Group__0)
		{ after(grammarAccess.getRegisterFileAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRegister
entryRuleRegister
:
{ before(grammarAccess.getRegisterRule()); }
	 ruleRegister
{ after(grammarAccess.getRegisterRule()); } 
	 EOF 
;

// Rule Register
ruleRegister 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRegisterAccess().getGroup()); }
		(rule__Register__Group__0)
		{ after(grammarAccess.getRegisterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRegisterAlias
entryRuleRegisterAlias
:
{ before(grammarAccess.getRegisterAliasRule()); }
	 ruleRegisterAlias
{ after(grammarAccess.getRegisterAliasRule()); } 
	 EOF 
;

// Rule RegisterAlias
ruleRegisterAlias 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRegisterAliasAccess().getGroup()); }
		(rule__RegisterAlias__Group__0)
		{ after(grammarAccess.getRegisterAliasAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScalar
entryRuleScalar
:
{ before(grammarAccess.getScalarRule()); }
	 ruleScalar
{ after(grammarAccess.getScalarRule()); } 
	 EOF 
;

// Rule Scalar
ruleScalar 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScalarAccess().getGroup()); }
		(rule__Scalar__Group__0)
		{ after(grammarAccess.getScalarAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumberLiteral
entryRuleNumberLiteral
:
{ before(grammarAccess.getNumberLiteralRule()); }
	 ruleNumberLiteral
{ after(grammarAccess.getNumberLiteralRule()); } 
	 EOF 
;

// Rule NumberLiteral
ruleNumberLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberLiteralAccess().getValueAssignment()); }
		(rule__NumberLiteral__ValueAssignment)
		{ after(grammarAccess.getNumberLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getBooleanOrExprParserRuleCall()); }
		ruleBooleanOrExpr
		{ after(grammarAccess.getExpressionAccess().getBooleanOrExprParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanOrExpr
entryRuleBooleanOrExpr
:
{ before(grammarAccess.getBooleanOrExprRule()); }
	 ruleBooleanOrExpr
{ after(grammarAccess.getBooleanOrExprRule()); } 
	 EOF 
;

// Rule BooleanOrExpr
ruleBooleanOrExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanOrExprAccess().getGroup()); }
		(rule__BooleanOrExpr__Group__0)
		{ after(grammarAccess.getBooleanOrExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanAndExpr
entryRuleBooleanAndExpr
:
{ before(grammarAccess.getBooleanAndExprRule()); }
	 ruleBooleanAndExpr
{ after(grammarAccess.getBooleanAndExprRule()); } 
	 EOF 
;

// Rule BooleanAndExpr
ruleBooleanAndExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanAndExprAccess().getGroup()); }
		(rule__BooleanAndExpr__Group__0)
		{ after(grammarAccess.getBooleanAndExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBitOrExpr
entryRuleBitOrExpr
:
{ before(grammarAccess.getBitOrExprRule()); }
	 ruleBitOrExpr
{ after(grammarAccess.getBitOrExprRule()); } 
	 EOF 
;

// Rule BitOrExpr
ruleBitOrExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBitOrExprAccess().getGroup()); }
		(rule__BitOrExpr__Group__0)
		{ after(grammarAccess.getBitOrExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBitXOrExpr
entryRuleBitXOrExpr
:
{ before(grammarAccess.getBitXOrExprRule()); }
	 ruleBitXOrExpr
{ after(grammarAccess.getBitXOrExprRule()); } 
	 EOF 
;

// Rule BitXOrExpr
ruleBitXOrExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBitXOrExprAccess().getGroup()); }
		(rule__BitXOrExpr__Group__0)
		{ after(grammarAccess.getBitXOrExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBitAndExpr
entryRuleBitAndExpr
:
{ before(grammarAccess.getBitAndExprRule()); }
	 ruleBitAndExpr
{ after(grammarAccess.getBitAndExprRule()); } 
	 EOF 
;

// Rule BitAndExpr
ruleBitAndExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBitAndExprAccess().getGroup()); }
		(rule__BitAndExpr__Group__0)
		{ after(grammarAccess.getBitAndExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqualityExpr
entryRuleEqualityExpr
:
{ before(grammarAccess.getEqualityExprRule()); }
	 ruleEqualityExpr
{ after(grammarAccess.getEqualityExprRule()); } 
	 EOF 
;

// Rule EqualityExpr
ruleEqualityExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityExprAccess().getGroup()); }
		(rule__EqualityExpr__Group__0)
		{ after(grammarAccess.getEqualityExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparisonExpr
entryRuleComparisonExpr
:
{ before(grammarAccess.getComparisonExprRule()); }
	 ruleComparisonExpr
{ after(grammarAccess.getComparisonExprRule()); } 
	 EOF 
;

// Rule ComparisonExpr
ruleComparisonExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonExprAccess().getGroup()); }
		(rule__ComparisonExpr__Group__0)
		{ after(grammarAccess.getComparisonExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShiftExpr
entryRuleShiftExpr
:
{ before(grammarAccess.getShiftExprRule()); }
	 ruleShiftExpr
{ after(grammarAccess.getShiftExprRule()); } 
	 EOF 
;

// Rule ShiftExpr
ruleShiftExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShiftExprAccess().getGroup()); }
		(rule__ShiftExpr__Group__0)
		{ after(grammarAccess.getShiftExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditionExpr
entryRuleAdditionExpr
:
{ before(grammarAccess.getAdditionExprRule()); }
	 ruleAdditionExpr
{ after(grammarAccess.getAdditionExprRule()); } 
	 EOF 
;

// Rule AdditionExpr
ruleAdditionExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditionExprAccess().getGroup()); }
		(rule__AdditionExpr__Group__0)
		{ after(grammarAccess.getAdditionExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicationExpr
entryRuleMultiplicationExpr
:
{ before(grammarAccess.getMultiplicationExprRule()); }
	 ruleMultiplicationExpr
{ after(grammarAccess.getMultiplicationExprRule()); } 
	 EOF 
;

// Rule MultiplicationExpr
ruleMultiplicationExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicationExprAccess().getGroup()); }
		(rule__MultiplicationExpr__Group__0)
		{ after(grammarAccess.getMultiplicationExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitaryExpr
entryRuleUnitaryExpr
:
{ before(grammarAccess.getUnitaryExprRule()); }
	 ruleUnitaryExpr
{ after(grammarAccess.getUnitaryExprRule()); } 
	 EOF 
;

// Rule UnitaryExpr
ruleUnitaryExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitaryExprAccess().getAlternatives()); }
		(rule__UnitaryExpr__Alternatives)
		{ after(grammarAccess.getUnitaryExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeConv
entryRuleTypeConv
:
{ before(grammarAccess.getTypeConvRule()); }
	 ruleTypeConv
{ after(grammarAccess.getTypeConvRule()); } 
	 EOF 
;

// Rule TypeConv
ruleTypeConv 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeConvAccess().getGroup()); }
		(rule__TypeConv__Group__0)
		{ after(grammarAccess.getTypeConvAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValueRef
entryRuleValueRef
:
{ before(grammarAccess.getValueRefRule()); }
	 ruleValueRef
{ after(grammarAccess.getValueRefRule()); } 
	 EOF 
;

// Rule ValueRef
ruleValueRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueRefAccess().getGroup()); }
		(rule__ValueRef__Group__0)
		{ after(grammarAccess.getValueRefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBitSizeSpec
entryRuleBitSizeSpec
:
{ before(grammarAccess.getBitSizeSpecRule()); }
	 ruleBitSizeSpec
{ after(grammarAccess.getBitSizeSpecRule()); } 
	 EOF 
;

// Rule BitSizeSpec
ruleBitSizeSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBitSizeSpecAccess().getGroup()); }
		(rule__BitSizeSpec__Group__0)
		{ after(grammarAccess.getBitSizeSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule DataType
ruleDataType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getAlternatives()); }
		(rule__DataType__Alternatives)
		{ after(grammarAccess.getDataTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule RegAttribute
ruleRegAttribute
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegAttributeAccess().getAlternatives()); }
		(rule__RegAttribute__Alternatives)
		{ after(grammarAccess.getRegAttributeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ConstAttribute
ruleConstAttribute
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstAttributeAccess().getAlternatives()); }
		(rule__ConstAttribute__Alternatives)
		{ after(grammarAccess.getConstAttributeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule InstrAttribute
ruleInstrAttribute
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstrAttributeAccess().getAlternatives()); }
		(rule__InstrAttribute__Alternatives)
		{ after(grammarAccess.getInstrAttributeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ISA__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getISAAccess().getInstructionSetParserRuleCall_0()); }
		ruleInstructionSet
		{ after(grammarAccess.getISAAccess().getInstructionSetParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getISAAccess().getCoreDefParserRuleCall_1()); }
		ruleCoreDef
		{ after(grammarAccess.getISAAccess().getCoreDefParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__RegsAlternatives_6_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionSetAccess().getRegsRegisterParserRuleCall_6_2_0_0()); }
		ruleRegister
		{ after(grammarAccess.getInstructionSetAccess().getRegsRegisterParserRuleCall_6_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionSetAccess().getRegsRegisterFileParserRuleCall_6_2_0_1()); }
		ruleRegisterFile
		{ after(grammarAccess.getInstructionSetAccess().getRegsRegisterFileParserRuleCall_6_2_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionSetAccess().getRegsRegisterAliasParserRuleCall_6_2_0_2()); }
		ruleRegisterAlias
		{ after(grammarAccess.getInstructionSetAccess().getRegsRegisterAliasParserRuleCall_6_2_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__RegsAlternatives_6_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionSetAccess().getRegsRegisterParserRuleCall_6_3_1_0_0()); }
		ruleRegister
		{ after(grammarAccess.getInstructionSetAccess().getRegsRegisterParserRuleCall_6_3_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionSetAccess().getRegsRegisterFileParserRuleCall_6_3_1_0_1()); }
		ruleRegisterFile
		{ after(grammarAccess.getInstructionSetAccess().getRegsRegisterFileParserRuleCall_6_3_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionSetAccess().getRegsRegisterAliasParserRuleCall_6_3_1_0_2()); }
		ruleRegisterAlias
		{ after(grammarAccess.getInstructionSetAccess().getRegsRegisterAliasParserRuleCall_6_3_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__RegsAlternatives_7_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoreDefAccess().getRegsRegisterParserRuleCall_7_2_0_0()); }
		ruleRegister
		{ after(grammarAccess.getCoreDefAccess().getRegsRegisterParserRuleCall_7_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCoreDefAccess().getRegsRegisterFileParserRuleCall_7_2_0_1()); }
		ruleRegisterFile
		{ after(grammarAccess.getCoreDefAccess().getRegsRegisterFileParserRuleCall_7_2_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getCoreDefAccess().getRegsRegisterAliasParserRuleCall_7_2_0_2()); }
		ruleRegisterAlias
		{ after(grammarAccess.getCoreDefAccess().getRegsRegisterAliasParserRuleCall_7_2_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__RegsAlternatives_7_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoreDefAccess().getRegsRegisterParserRuleCall_7_3_1_0_0()); }
		ruleRegister
		{ after(grammarAccess.getCoreDefAccess().getRegsRegisterParserRuleCall_7_3_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCoreDefAccess().getRegsRegisterFileParserRuleCall_7_3_1_0_1()); }
		ruleRegisterFile
		{ after(grammarAccess.getCoreDefAccess().getRegsRegisterFileParserRuleCall_7_3_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getCoreDefAccess().getRegsRegisterAliasParserRuleCall_7_3_1_0_2()); }
		ruleRegisterAlias
		{ after(grammarAccess.getCoreDefAccess().getRegsRegisterAliasParserRuleCall_7_3_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getBitValueParserRuleCall_0()); }
		ruleBitValue
		{ after(grammarAccess.getFieldAccess().getBitValueParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFieldAccess().getBitFieldParserRuleCall_1()); }
		ruleBitField
		{ after(grammarAccess.getFieldAccess().getBitFieldParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getAssignmentParserRuleCall_0()); }
		ruleAssignment
		{ after(grammarAccess.getStatementAccess().getAssignmentParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getConditionalStmtParserRuleCall_1()); }
		ruleConditionalStmt
		{ after(grammarAccess.getStatementAccess().getConditionalStmtParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getDirectCodeParserRuleCall_2()); }
		ruleDirectCode
		{ after(grammarAccess.getStatementAccess().getDirectCodeParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getProcedureParserRuleCall_3()); }
		ruleProcedure
		{ after(grammarAccess.getStatementAccess().getProcedureParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup_0_0()); }
		(rule__Assignment__Group_0_0__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup_0_1()); }
		(rule__Assignment__Group_0_1__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup_0_2()); }
		(rule__Assignment__Group_0_2__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStmt__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalStmtAccess().getThenStmtsAssignment_4_0()); }
		(rule__ConditionalStmt__ThenStmtsAssignment_4_0)
		{ after(grammarAccess.getConditionalStmtAccess().getThenStmtsAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionalStmtAccess().getGroup_4_1()); }
		(rule__ConditionalStmt__Group_4_1__0)
		{ after(grammarAccess.getConditionalStmtAccess().getGroup_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStmt__Alternatives_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalStmtAccess().getElseStmtsAssignment_5_1_0()); }
		(rule__ConditionalStmt__ElseStmtsAssignment_5_1_0)
		{ after(grammarAccess.getConditionalStmtAccess().getElseStmtsAssignment_5_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionalStmtAccess().getGroup_5_1_1()); }
		(rule__ConditionalStmt__Group_5_1_1__0)
		{ after(grammarAccess.getConditionalStmtAccess().getGroup_5_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getConstantDefParserRuleCall_0()); }
		ruleConstantDef
		{ after(grammarAccess.getConstantAccess().getConstantDefParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getConstantDeclParserRuleCall_1()); }
		ruleConstantDecl
		{ after(grammarAccess.getConstantAccess().getConstantDeclParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedVariable__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexedVariableAccess().getAddressSpaceParserRuleCall_0()); }
		ruleAddressSpace
		{ after(grammarAccess.getIndexedVariableAccess().getAddressSpaceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getIndexedVariableAccess().getRegisterFileParserRuleCall_1()); }
		ruleRegisterFile
		{ after(grammarAccess.getIndexedVariableAccess().getRegisterFileParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarVariable__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScalarVariableAccess().getRegisterVariableParserRuleCall_0()); }
		ruleRegisterVariable
		{ after(grammarAccess.getScalarVariableAccess().getRegisterVariableParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getScalarVariableAccess().getScalarParserRuleCall_1()); }
		ruleScalar
		{ after(grammarAccess.getScalarVariableAccess().getScalarParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterVariable__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegisterVariableAccess().getRegisterParserRuleCall_0()); }
		ruleRegister
		{ after(grammarAccess.getRegisterVariableAccess().getRegisterParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRegisterVariableAccess().getRegisterAliasParserRuleCall_1()); }
		ruleRegisterAlias
		{ after(grammarAccess.getRegisterVariableAccess().getRegisterAliasParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddressSpace__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddressSpaceAccess().getBitSizeAssignment_2_0()); }
		(rule__AddressSpace__BitSizeAssignment_2_0)
		{ after(grammarAccess.getAddressSpaceAccess().getBitSizeAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getAddressSpaceAccess().getBitSizeConstAssignment_2_1()); }
		(rule__AddressSpace__BitSizeConstAssignment_2_1)
		{ after(grammarAccess.getAddressSpaceAccess().getBitSizeConstAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterFile__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegisterFileAccess().getBitSizeAssignment_2_0()); }
		(rule__RegisterFile__BitSizeAssignment_2_0)
		{ after(grammarAccess.getRegisterFileAccess().getBitSizeAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getRegisterFileAccess().getBitSizeConstAssignment_2_1()); }
		(rule__RegisterFile__BitSizeConstAssignment_2_1)
		{ after(grammarAccess.getRegisterFileAccess().getBitSizeConstAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Register__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegisterAccess().getBitSizeAssignment_2_0()); }
		(rule__Register__BitSizeAssignment_2_0)
		{ after(grammarAccess.getRegisterAccess().getBitSizeAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getRegisterAccess().getBitSizeConstAssignment_2_1()); }
		(rule__Register__BitSizeConstAssignment_2_1)
		{ after(grammarAccess.getRegisterAccess().getBitSizeConstAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegisterAliasAccess().getBitSizeAssignment_3_0()); }
		(rule__RegisterAlias__BitSizeAssignment_3_0)
		{ after(grammarAccess.getRegisterAliasAccess().getBitSizeAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getRegisterAliasAccess().getBitSizeConstAssignment_3_1()); }
		(rule__RegisterAlias__BitSizeConstAssignment_3_1)
		{ after(grammarAccess.getRegisterAliasAccess().getBitSizeConstAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Alternatives_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegisterAliasAccess().getOriginalAssignment_7_0()); }
		(rule__RegisterAlias__OriginalAssignment_7_0)
		{ after(grammarAccess.getRegisterAliasAccess().getOriginalAssignment_7_0()); }
	)
	|
	(
		{ before(grammarAccess.getRegisterAliasAccess().getGroup_7_1()); }
		(rule__RegisterAlias__Group_7_1__0)
		{ after(grammarAccess.getRegisterAliasAccess().getGroup_7_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Alternatives_7_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegisterAliasAccess().getIndexAssignment_7_1_2_0()); }
		(rule__RegisterAlias__IndexAssignment_7_1_2_0)
		{ after(grammarAccess.getRegisterAliasAccess().getIndexAssignment_7_1_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getRegisterAliasAccess().getIndexAssignment_7_1_2_1()); }
		(rule__RegisterAlias__IndexAssignment_7_1_2_1)
		{ after(grammarAccess.getRegisterAliasAccess().getIndexAssignment_7_1_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scalar__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScalarAccess().getBitSizeAssignment_3_0()); }
		(rule__Scalar__BitSizeAssignment_3_0)
		{ after(grammarAccess.getScalarAccess().getBitSizeAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getScalarAccess().getBitSizeConstAssignment_3_1()); }
		(rule__Scalar__BitSizeConstAssignment_3_1)
		{ after(grammarAccess.getScalarAccess().getBitSizeConstAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExprAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0()); }
		'=='
		{ after(grammarAccess.getEqualityExprAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityExprAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); }
		'!='
		{ after(grammarAccess.getEqualityExprAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpr__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExprAccess().getOpLessThanSignKeyword_1_1_0_0()); }
		'<'
		{ after(grammarAccess.getComparisonExprAccess().getOpLessThanSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExprAccess().getOpGreaterThanSignKeyword_1_1_0_1()); }
		'>'
		{ after(grammarAccess.getComparisonExprAccess().getOpGreaterThanSignKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExprAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_2()); }
		'<='
		{ after(grammarAccess.getComparisonExprAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExprAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_3()); }
		'>='
		{ after(grammarAccess.getComparisonExprAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpr__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShiftExprAccess().getOpLessThanSignLessThanSignKeyword_1_1_0_0()); }
		'<<'
		{ after(grammarAccess.getShiftExprAccess().getOpLessThanSignLessThanSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getShiftExprAccess().getOpGreaterThanSignGreaterThanSignKeyword_1_1_0_1()); }
		'>>'
		{ after(grammarAccess.getShiftExprAccess().getOpGreaterThanSignGreaterThanSignKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpr__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionExprAccess().getOpPlusSignKeyword_1_1_0_0()); }
		'+'
		{ after(grammarAccess.getAdditionExprAccess().getOpPlusSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditionExprAccess().getOpHyphenMinusKeyword_1_1_0_1()); }
		'-'
		{ after(grammarAccess.getAdditionExprAccess().getOpHyphenMinusKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpr__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationExprAccess().getOpAsteriskKeyword_1_1_0_0()); }
		'*'
		{ after(grammarAccess.getMultiplicationExprAccess().getOpAsteriskKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicationExprAccess().getOpSolidusKeyword_1_1_0_1()); }
		'/'
		{ after(grammarAccess.getMultiplicationExprAccess().getOpSolidusKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicationExprAccess().getOpPercentSignKeyword_1_1_0_2()); }
		'%'
		{ after(grammarAccess.getMultiplicationExprAccess().getOpPercentSignKeyword_1_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitaryExpr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitaryExprAccess().getTypeConvParserRuleCall_0()); }
		ruleTypeConv
		{ after(grammarAccess.getUnitaryExprAccess().getTypeConvParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnitaryExprAccess().getGroup_1()); }
		(rule__UnitaryExpr__Group_1__0)
		{ after(grammarAccess.getUnitaryExprAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitaryExpr__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitaryExprAccess().getOpHyphenMinusKeyword_1_1_0_0()); }
		'-'
		{ after(grammarAccess.getUnitaryExprAccess().getOpHyphenMinusKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnitaryExprAccess().getOpPlusSignKeyword_1_1_0_1()); }
		'+'
		{ after(grammarAccess.getUnitaryExprAccess().getOpPlusSignKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnitaryExprAccess().getOpTildeKeyword_1_1_0_2()); }
		'~'
		{ after(grammarAccess.getUnitaryExprAccess().getOpTildeKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnitaryExprAccess().getOpExclamationMarkKeyword_1_1_0_3()); }
		'!'
		{ after(grammarAccess.getUnitaryExprAccess().getOpExclamationMarkKeyword_1_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_0()); }
		(rule__Primary__Group_0__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_1()); }
		(rule__Primary__Group_1__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getNumberLiteralParserRuleCall_2()); }
		ruleNumberLiteral
		{ after(grammarAccess.getPrimaryAccess().getNumberLiteralParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getValueRefParserRuleCall_3()); }
		ruleValueRef
		{ after(grammarAccess.getPrimaryAccess().getValueRefParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRef__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueRefAccess().getGroup_0_0()); }
		(rule__ValueRef__Group_0_0__0)
		{ after(grammarAccess.getValueRefAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueRefAccess().getValueAssignment_0_1()); }
		(rule__ValueRef__ValueAssignment_0_1)
		{ after(grammarAccess.getValueRefAccess().getValueAssignment_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueRefAccess().getValueAssignment_0_2()); }
		(rule__ValueRef__ValueAssignment_0_2)
		{ after(grammarAccess.getValueRefAccess().getValueAssignment_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitSizeSpec__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitSizeSpecAccess().getValueAssignment_1_0()); }
		(rule__BitSizeSpec__ValueAssignment_1_0)
		{ after(grammarAccess.getBitSizeSpecAccess().getValueAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getBitSizeSpecAccess().getConstantAssignment_1_1()); }
		(rule__BitSizeSpec__ConstantAssignment_1_1)
		{ after(grammarAccess.getBitSizeSpecAccess().getConstantAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getNONEEnumLiteralDeclaration_0()); }
		('NONE')
		{ after(grammarAccess.getDataTypeAccess().getNONEEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getUNSIGNEDEnumLiteralDeclaration_1()); }
		('u')
		{ after(grammarAccess.getDataTypeAccess().getUNSIGNEDEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getSIGNEDEnumLiteralDeclaration_2()); }
		('s')
		{ after(grammarAccess.getDataTypeAccess().getSIGNEDEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getFLOATEnumLiteralDeclaration_3()); }
		('f')
		{ after(grammarAccess.getDataTypeAccess().getFLOATEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getDOUBLEEnumLiteralDeclaration_4()); }
		('d')
		{ after(grammarAccess.getDataTypeAccess().getDOUBLEEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getQUADEnumLiteralDeclaration_5()); }
		('q')
		{ after(grammarAccess.getDataTypeAccess().getQUADEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getBOOLEANEnumLiteralDeclaration_6()); }
		('b')
		{ after(grammarAccess.getDataTypeAccess().getBOOLEANEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegAttribute__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegAttributeAccess().getPCEnumLiteralDeclaration_0()); }
		('is_pc')
		{ after(grammarAccess.getRegAttributeAccess().getPCEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getRegAttributeAccess().getDELEnumLiteralDeclaration_1()); }
		('delete')
		{ after(grammarAccess.getRegAttributeAccess().getDELEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstAttribute__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstAttributeAccess().getREG_WIDTHEnumLiteralDeclaration_0()); }
		('is_reg_with')
		{ after(grammarAccess.getConstAttributeAccess().getREG_WIDTHEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstAttributeAccess().getADDR_WIDTHEnumLiteralDeclaration_1()); }
		('is_addr_width')
		{ after(grammarAccess.getConstAttributeAccess().getADDR_WIDTHEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstrAttribute__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstrAttributeAccess().getNO_CONTEnumLiteralDeclaration_0()); }
		('no_cont')
		{ after(grammarAccess.getInstrAttributeAccess().getNO_CONTEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getInstrAttributeAccess().getCONDEnumLiteralDeclaration_1()); }
		('cond')
		{ after(grammarAccess.getInstrAttributeAccess().getCONDEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getInstrAttributeAccess().getFLUSHEnumLiteralDeclaration_2()); }
		('flush')
		{ after(grammarAccess.getInstrAttributeAccess().getFLUSHEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DescriptionContent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DescriptionContent__Group__0__Impl
	rule__DescriptionContent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DescriptionContent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDescriptionContentAccess().getImportsAssignment_0()); }
	(rule__DescriptionContent__ImportsAssignment_0)*
	{ after(grammarAccess.getDescriptionContentAccess().getImportsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DescriptionContent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DescriptionContent__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DescriptionContent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getDescriptionContentAccess().getDefinitionsAssignment_1()); }
		(rule__DescriptionContent__DefinitionsAssignment_1)
		{ after(grammarAccess.getDescriptionContentAccess().getDefinitionsAssignment_1()); }
	)
	(
		{ before(grammarAccess.getDescriptionContentAccess().getDefinitionsAssignment_1()); }
		(rule__DescriptionContent__DefinitionsAssignment_1)*
		{ after(grammarAccess.getDescriptionContentAccess().getDefinitionsAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
	(rule__Import__ImportURIAssignment_1)
	{ after(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InstructionSet__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group__0__Impl
	rule__InstructionSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getInsructionSetKeyword_0()); }
	'InsructionSet'
	{ after(grammarAccess.getInstructionSetAccess().getInsructionSetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group__1__Impl
	rule__InstructionSet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getNameAssignment_1()); }
	(rule__InstructionSet__NameAssignment_1)
	{ after(grammarAccess.getInstructionSetAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group__2__Impl
	rule__InstructionSet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getGroup_2()); }
	(rule__InstructionSet__Group_2__0)?
	{ after(grammarAccess.getInstructionSetAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group__3__Impl
	rule__InstructionSet__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getInstructionSetAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group__4__Impl
	rule__InstructionSet__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getGroup_4()); }
	(rule__InstructionSet__Group_4__0)?
	{ after(grammarAccess.getInstructionSetAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group__5__Impl
	rule__InstructionSet__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getGroup_5()); }
	(rule__InstructionSet__Group_5__0)?
	{ after(grammarAccess.getInstructionSetAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group__6__Impl
	rule__InstructionSet__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getGroup_6()); }
	(rule__InstructionSet__Group_6__0)?
	{ after(grammarAccess.getInstructionSetAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group__7__Impl
	rule__InstructionSet__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getGroup_7()); }
	(rule__InstructionSet__Group_7__0)?
	{ after(grammarAccess.getInstructionSetAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getInstructionSetAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InstructionSet__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group_2__0__Impl
	rule__InstructionSet__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getExtendsKeyword_2_0()); }
	'extends'
	{ after(grammarAccess.getInstructionSetAccess().getExtendsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getSuperTypeAssignment_2_1()); }
	(rule__InstructionSet__SuperTypeAssignment_2_1)
	{ after(grammarAccess.getInstructionSetAccess().getSuperTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InstructionSet__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group_4__0__Impl
	rule__InstructionSet__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getConstantsKeyword_4_0()); }
	'constants'
	{ after(grammarAccess.getInstructionSetAccess().getConstantsKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group_4__1__Impl
	rule__InstructionSet__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getLeftCurlyBracketKeyword_4_1()); }
	'{'
	{ after(grammarAccess.getInstructionSetAccess().getLeftCurlyBracketKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group_4__2__Impl
	rule__InstructionSet__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getConstantsAssignment_4_2()); }
	(rule__InstructionSet__ConstantsAssignment_4_2)
	{ after(grammarAccess.getInstructionSetAccess().getConstantsAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group_4__3__Impl
	rule__InstructionSet__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getGroup_4_3()); }
	(rule__InstructionSet__Group_4_3__0)*
	{ after(grammarAccess.getInstructionSetAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getRightCurlyBracketKeyword_4_4()); }
	'}'
	{ after(grammarAccess.getInstructionSetAccess().getRightCurlyBracketKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InstructionSet__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group_4_3__0__Impl
	rule__InstructionSet__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getCommaKeyword_4_3_0()); }
	','
	{ after(grammarAccess.getInstructionSetAccess().getCommaKeyword_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getConstantsAssignment_4_3_1()); }
	(rule__InstructionSet__ConstantsAssignment_4_3_1)
	{ after(grammarAccess.getInstructionSetAccess().getConstantsAssignment_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InstructionSet__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group_5__0__Impl
	rule__InstructionSet__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getAddress_spacesKeyword_5_0()); }
	'address_spaces'
	{ after(grammarAccess.getInstructionSetAccess().getAddress_spacesKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group_5__1__Impl
	rule__InstructionSet__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getLeftCurlyBracketKeyword_5_1()); }
	'{'
	{ after(grammarAccess.getInstructionSetAccess().getLeftCurlyBracketKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group_5__2__Impl
	rule__InstructionSet__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getSpacesAssignment_5_2()); }
	(rule__InstructionSet__SpacesAssignment_5_2)
	{ after(grammarAccess.getInstructionSetAccess().getSpacesAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group_5__3__Impl
	rule__InstructionSet__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getGroup_5_3()); }
	(rule__InstructionSet__Group_5_3__0)*
	{ after(grammarAccess.getInstructionSetAccess().getGroup_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_5__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_5__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getRightCurlyBracketKeyword_5_4()); }
	'}'
	{ after(grammarAccess.getInstructionSetAccess().getRightCurlyBracketKeyword_5_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InstructionSet__Group_5_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group_5_3__0__Impl
	rule__InstructionSet__Group_5_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_5_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getCommaKeyword_5_3_0()); }
	','
	{ after(grammarAccess.getInstructionSetAccess().getCommaKeyword_5_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_5_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group_5_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_5_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getSpacesAssignment_5_3_1()); }
	(rule__InstructionSet__SpacesAssignment_5_3_1)
	{ after(grammarAccess.getInstructionSetAccess().getSpacesAssignment_5_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InstructionSet__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group_6__0__Impl
	rule__InstructionSet__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getRegistersKeyword_6_0()); }
	'registers'
	{ after(grammarAccess.getInstructionSetAccess().getRegistersKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group_6__1__Impl
	rule__InstructionSet__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getLeftCurlyBracketKeyword_6_1()); }
	'{'
	{ after(grammarAccess.getInstructionSetAccess().getLeftCurlyBracketKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group_6__2__Impl
	rule__InstructionSet__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getRegsAssignment_6_2()); }
	(rule__InstructionSet__RegsAssignment_6_2)
	{ after(grammarAccess.getInstructionSetAccess().getRegsAssignment_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_6__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group_6__3__Impl
	rule__InstructionSet__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_6__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getGroup_6_3()); }
	(rule__InstructionSet__Group_6_3__0)*
	{ after(grammarAccess.getInstructionSetAccess().getGroup_6_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_6__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group_6__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_6__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getRightCurlyBracketKeyword_6_4()); }
	'}'
	{ after(grammarAccess.getInstructionSetAccess().getRightCurlyBracketKeyword_6_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InstructionSet__Group_6_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group_6_3__0__Impl
	rule__InstructionSet__Group_6_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_6_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getCommaKeyword_6_3_0()); }
	','
	{ after(grammarAccess.getInstructionSetAccess().getCommaKeyword_6_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_6_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group_6_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_6_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getRegsAssignment_6_3_1()); }
	(rule__InstructionSet__RegsAssignment_6_3_1)
	{ after(grammarAccess.getInstructionSetAccess().getRegsAssignment_6_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InstructionSet__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group_7__0__Impl
	rule__InstructionSet__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getInstructionsKeyword_7_0()); }
	'instructions'
	{ after(grammarAccess.getInstructionSetAccess().getInstructionsKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group_7__1__Impl
	rule__InstructionSet__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getLeftCurlyBracketKeyword_7_1()); }
	'{'
	{ after(grammarAccess.getInstructionSetAccess().getLeftCurlyBracketKeyword_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group_7__2__Impl
	rule__InstructionSet__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getInstructionSetAccess().getInstrAssignment_7_2()); }
		(rule__InstructionSet__InstrAssignment_7_2)
		{ after(grammarAccess.getInstructionSetAccess().getInstrAssignment_7_2()); }
	)
	(
		{ before(grammarAccess.getInstructionSetAccess().getInstrAssignment_7_2()); }
		(rule__InstructionSet__InstrAssignment_7_2)*
		{ after(grammarAccess.getInstructionSetAccess().getInstrAssignment_7_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_7__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstructionSet__Group_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__Group_7__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionSetAccess().getRightCurlyBracketKeyword_7_3()); }
	'}'
	{ after(grammarAccess.getInstructionSetAccess().getRightCurlyBracketKeyword_7_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CoreDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group__0__Impl
	rule__CoreDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getCoreKeyword_0()); }
	'Core'
	{ after(grammarAccess.getCoreDefAccess().getCoreKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group__1__Impl
	rule__CoreDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getNameAssignment_1()); }
	(rule__CoreDef__NameAssignment_1)
	{ after(grammarAccess.getCoreDefAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group__2__Impl
	rule__CoreDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getGroup_2()); }
	(rule__CoreDef__Group_2__0)?
	{ after(grammarAccess.getCoreDefAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group__3__Impl
	rule__CoreDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getCoreDefAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group__4__Impl
	rule__CoreDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getGroup_4()); }
	(rule__CoreDef__Group_4__0)?
	{ after(grammarAccess.getCoreDefAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group__5__Impl
	rule__CoreDef__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getGroup_5()); }
	(rule__CoreDef__Group_5__0)?
	{ after(grammarAccess.getCoreDefAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group__6__Impl
	rule__CoreDef__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getGroup_6()); }
	(rule__CoreDef__Group_6__0)?
	{ after(grammarAccess.getCoreDefAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group__7__Impl
	rule__CoreDef__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getGroup_7()); }
	(rule__CoreDef__Group_7__0)?
	{ after(grammarAccess.getCoreDefAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group__8__Impl
	rule__CoreDef__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getGroup_8()); }
	(rule__CoreDef__Group_8__0)?
	{ after(grammarAccess.getCoreDefAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getCoreDefAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CoreDef__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group_2__0__Impl
	rule__CoreDef__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getProvidesKeyword_2_0()); }
	'provides'
	{ after(grammarAccess.getCoreDefAccess().getProvidesKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group_2__1__Impl
	rule__CoreDef__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getContributingTypeAssignment_2_1()); }
	(rule__CoreDef__ContributingTypeAssignment_2_1)
	{ after(grammarAccess.getCoreDefAccess().getContributingTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getGroup_2_2()); }
	(rule__CoreDef__Group_2_2__0)*
	{ after(grammarAccess.getCoreDefAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CoreDef__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group_2_2__0__Impl
	rule__CoreDef__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getCommaKeyword_2_2_0()); }
	','
	{ after(grammarAccess.getCoreDefAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getContributingTypeAssignment_2_2_1()); }
	(rule__CoreDef__ContributingTypeAssignment_2_2_1)
	{ after(grammarAccess.getCoreDefAccess().getContributingTypeAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CoreDef__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group_4__0__Impl
	rule__CoreDef__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getTemplateKeyword_4_0()); }
	'template'
	{ after(grammarAccess.getCoreDefAccess().getTemplateKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group_4__1__Impl
	rule__CoreDef__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getColonKeyword_4_1()); }
	':'
	{ after(grammarAccess.getCoreDefAccess().getColonKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group_4__2__Impl
	rule__CoreDef__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getTemplateNameAssignment_4_2()); }
	(rule__CoreDef__TemplateNameAssignment_4_2)
	{ after(grammarAccess.getCoreDefAccess().getTemplateNameAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getSemicolonKeyword_4_3()); }
	';'
	{ after(grammarAccess.getCoreDefAccess().getSemicolonKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CoreDef__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group_5__0__Impl
	rule__CoreDef__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getConstantsKeyword_5_0()); }
	'constants'
	{ after(grammarAccess.getCoreDefAccess().getConstantsKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group_5__1__Impl
	rule__CoreDef__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getLeftCurlyBracketKeyword_5_1()); }
	'{'
	{ after(grammarAccess.getCoreDefAccess().getLeftCurlyBracketKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group_5__2__Impl
	rule__CoreDef__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCoreDefAccess().getConstantsAssignment_5_2()); }
		(rule__CoreDef__ConstantsAssignment_5_2)
		{ after(grammarAccess.getCoreDefAccess().getConstantsAssignment_5_2()); }
	)
	(
		{ before(grammarAccess.getCoreDefAccess().getConstantsAssignment_5_2()); }
		(rule__CoreDef__ConstantsAssignment_5_2)*
		{ after(grammarAccess.getCoreDefAccess().getConstantsAssignment_5_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getRightCurlyBracketKeyword_5_3()); }
	'}'
	{ after(grammarAccess.getCoreDefAccess().getRightCurlyBracketKeyword_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CoreDef__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group_6__0__Impl
	rule__CoreDef__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getAddress_spacesKeyword_6_0()); }
	'address_spaces'
	{ after(grammarAccess.getCoreDefAccess().getAddress_spacesKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group_6__1__Impl
	rule__CoreDef__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getLeftCurlyBracketKeyword_6_1()); }
	'{'
	{ after(grammarAccess.getCoreDefAccess().getLeftCurlyBracketKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group_6__2__Impl
	rule__CoreDef__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getSpacesAssignment_6_2()); }
	(rule__CoreDef__SpacesAssignment_6_2)
	{ after(grammarAccess.getCoreDefAccess().getSpacesAssignment_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_6__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group_6__3__Impl
	rule__CoreDef__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_6__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getGroup_6_3()); }
	(rule__CoreDef__Group_6_3__0)*
	{ after(grammarAccess.getCoreDefAccess().getGroup_6_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_6__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group_6__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_6__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getRightCurlyBracketKeyword_6_4()); }
	'}'
	{ after(grammarAccess.getCoreDefAccess().getRightCurlyBracketKeyword_6_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CoreDef__Group_6_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group_6_3__0__Impl
	rule__CoreDef__Group_6_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_6_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getCommaKeyword_6_3_0()); }
	','
	{ after(grammarAccess.getCoreDefAccess().getCommaKeyword_6_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_6_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group_6_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_6_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getSpacesAssignment_6_3_1()); }
	(rule__CoreDef__SpacesAssignment_6_3_1)
	{ after(grammarAccess.getCoreDefAccess().getSpacesAssignment_6_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CoreDef__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group_7__0__Impl
	rule__CoreDef__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getRegistersKeyword_7_0()); }
	'registers'
	{ after(grammarAccess.getCoreDefAccess().getRegistersKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group_7__1__Impl
	rule__CoreDef__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getLeftCurlyBracketKeyword_7_1()); }
	'{'
	{ after(grammarAccess.getCoreDefAccess().getLeftCurlyBracketKeyword_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group_7__2__Impl
	rule__CoreDef__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getRegsAssignment_7_2()); }
	(rule__CoreDef__RegsAssignment_7_2)
	{ after(grammarAccess.getCoreDefAccess().getRegsAssignment_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_7__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group_7__3__Impl
	rule__CoreDef__Group_7__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_7__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getGroup_7_3()); }
	(rule__CoreDef__Group_7_3__0)*
	{ after(grammarAccess.getCoreDefAccess().getGroup_7_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_7__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group_7__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_7__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getRightCurlyBracketKeyword_7_4()); }
	'}'
	{ after(grammarAccess.getCoreDefAccess().getRightCurlyBracketKeyword_7_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CoreDef__Group_7_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group_7_3__0__Impl
	rule__CoreDef__Group_7_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_7_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getCommaKeyword_7_3_0()); }
	','
	{ after(grammarAccess.getCoreDefAccess().getCommaKeyword_7_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_7_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group_7_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_7_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getRegsAssignment_7_3_1()); }
	(rule__CoreDef__RegsAssignment_7_3_1)
	{ after(grammarAccess.getCoreDefAccess().getRegsAssignment_7_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CoreDef__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group_8__0__Impl
	rule__CoreDef__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getInstructionsKeyword_8_0()); }
	'instructions'
	{ after(grammarAccess.getCoreDefAccess().getInstructionsKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group_8__1__Impl
	rule__CoreDef__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getLeftCurlyBracketKeyword_8_1()); }
	'{'
	{ after(grammarAccess.getCoreDefAccess().getLeftCurlyBracketKeyword_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group_8__2__Impl
	rule__CoreDef__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCoreDefAccess().getInstrAssignment_8_2()); }
		(rule__CoreDef__InstrAssignment_8_2)
		{ after(grammarAccess.getCoreDefAccess().getInstrAssignment_8_2()); }
	)
	(
		{ before(grammarAccess.getCoreDefAccess().getInstrAssignment_8_2()); }
		(rule__CoreDef__InstrAssignment_8_2)*
		{ after(grammarAccess.getCoreDefAccess().getInstrAssignment_8_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_8__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoreDef__Group_8__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__Group_8__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoreDefAccess().getRightCurlyBracketKeyword_8_3()); }
	'}'
	{ after(grammarAccess.getCoreDefAccess().getRightCurlyBracketKeyword_8_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RangeSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeSpec__Group__0__Impl
	rule__RangeSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeSpecAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getRangeSpecAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeSpec__Group__1__Impl
	rule__RangeSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeSpecAccess().getLeftAssignment_1()); }
	(rule__RangeSpec__LeftAssignment_1)
	{ after(grammarAccess.getRangeSpecAccess().getLeftAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeSpec__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeSpec__Group__2__Impl
	rule__RangeSpec__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeSpec__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeSpecAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getRangeSpecAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeSpec__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeSpec__Group__3__Impl
	rule__RangeSpec__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeSpec__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeSpecAccess().getRightAssignment_3()); }
	(rule__RangeSpec__RightAssignment_3)
	{ after(grammarAccess.getRangeSpecAccess().getRightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeSpec__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeSpec__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeSpec__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeSpecAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getRangeSpecAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group_0__0__Impl
	rule__Instruction__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getNameAssignment_0_0()); }
	(rule__Instruction__NameAssignment_0_0)
	{ after(grammarAccess.getInstructionAccess().getNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group_0__1__Impl
	rule__Instruction__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getGroup_0_1()); }
	(rule__Instruction__Group_0_1__0)?
	{ after(grammarAccess.getInstructionAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group_0__2__Impl
	rule__Instruction__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getLeftCurlyBracketKeyword_0_2()); }
	'{'
	{ after(grammarAccess.getInstructionAccess().getLeftCurlyBracketKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getGroup_0_3()); }
	(rule__Instruction__Group_0_3__0)
	{ after(grammarAccess.getInstructionAccess().getGroup_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group_0_1__0__Impl
	rule__Instruction__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getLeftParenthesisKeyword_0_1_0()); }
	'('
	{ after(grammarAccess.getInstructionAccess().getLeftParenthesisKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group_0_1__1__Impl
	rule__Instruction__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getAttributesAssignment_0_1_1()); }
	(rule__Instruction__AttributesAssignment_0_1_1)
	{ after(grammarAccess.getInstructionAccess().getAttributesAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group_0_1__2__Impl
	rule__Instruction__Group_0_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getGroup_0_1_2()); }
	(rule__Instruction__Group_0_1_2__0)*
	{ after(grammarAccess.getInstructionAccess().getGroup_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group_0_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getRightParenthesisKeyword_0_1_3()); }
	')'
	{ after(grammarAccess.getInstructionAccess().getRightParenthesisKeyword_0_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group_0_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group_0_1_2__0__Impl
	rule__Instruction__Group_0_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getCommaKeyword_0_1_2_0()); }
	','
	{ after(grammarAccess.getInstructionAccess().getCommaKeyword_0_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group_0_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getAttributesAssignment_0_1_2_1()); }
	(rule__Instruction__AttributesAssignment_0_1_2_1)
	{ after(grammarAccess.getInstructionAccess().getAttributesAssignment_0_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group_0_3__0__Impl
	rule__Instruction__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getEncodingKeyword_0_3_0()); }
	'encoding'
	{ after(grammarAccess.getInstructionAccess().getEncodingKeyword_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group_0_3__1__Impl
	rule__Instruction__Group_0_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getColonKeyword_0_3_1()); }
	':'
	{ after(grammarAccess.getInstructionAccess().getColonKeyword_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group_0_3__2__Impl
	rule__Instruction__Group_0_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getEncodingAssignment_0_3_2()); }
	(rule__Instruction__EncodingAssignment_0_3_2)
	{ after(grammarAccess.getInstructionAccess().getEncodingAssignment_0_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group_0_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getSemicolonKeyword_0_3_3()); }
	';'
	{ after(grammarAccess.getInstructionAccess().getSemicolonKeyword_0_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group_1__0__Impl
	rule__Instruction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getGroup_1_0()); }
	(rule__Instruction__Group_1_0__0)?
	{ after(grammarAccess.getInstructionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group_1__1__Impl
	rule__Instruction__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getOperationAssignment_1_1()); }
	(rule__Instruction__OperationAssignment_1_1)?
	{ after(grammarAccess.getInstructionAccess().getOperationAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getRightCurlyBracketKeyword_1_2()); }
	'}'
	{ after(grammarAccess.getInstructionAccess().getRightCurlyBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group_1_0__0__Impl
	rule__Instruction__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getArgs_disassKeyword_1_0_0()); }
	'args_disass'
	{ after(grammarAccess.getInstructionAccess().getArgs_disassKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group_1_0__1__Impl
	rule__Instruction__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getColonKeyword_1_0_1()); }
	':'
	{ after(grammarAccess.getInstructionAccess().getColonKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group_1_0__2__Impl
	rule__Instruction__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getDisassAssignment_1_0_2()); }
	(rule__Instruction__DisassAssignment_1_0_2)
	{ after(grammarAccess.getInstructionAccess().getDisassAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_1_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_1_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getSemicolonKeyword_1_0_3()); }
	';'
	{ after(grammarAccess.getInstructionAccess().getSemicolonKeyword_1_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Encoding__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Encoding__Group__0__Impl
	rule__Encoding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Encoding__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEncodingAccess().getFieldsAssignment_0()); }
	(rule__Encoding__FieldsAssignment_0)
	{ after(grammarAccess.getEncodingAccess().getFieldsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Encoding__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Encoding__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Encoding__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEncodingAccess().getGroup_1()); }
	(rule__Encoding__Group_1__0)*
	{ after(grammarAccess.getEncodingAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Encoding__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Encoding__Group_1__0__Impl
	rule__Encoding__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Encoding__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEncodingAccess().getVerticalLineKeyword_1_0()); }
	'|'
	{ after(grammarAccess.getEncodingAccess().getVerticalLineKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Encoding__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Encoding__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Encoding__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEncodingAccess().getFieldsAssignment_1_1()); }
	(rule__Encoding__FieldsAssignment_1_1)
	{ after(grammarAccess.getEncodingAccess().getFieldsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BitField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitField__Group__0__Impl
	rule__BitField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitFieldAccess().getNameAssignment_0()); }
	(rule__BitField__NameAssignment_0)
	{ after(grammarAccess.getBitFieldAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitField__Group__1__Impl
	rule__BitField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BitField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitFieldAccess().getBitRangeAssignment_1()); }
	(rule__BitField__BitRangeAssignment_1)
	{ after(grammarAccess.getBitFieldAccess().getBitRangeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitField__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitField__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitField__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitFieldAccess().getGroup_2()); }
	(rule__BitField__Group_2__0)?
	{ after(grammarAccess.getBitFieldAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BitField__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitField__Group_2__0__Impl
	rule__BitField__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitField__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitFieldAccess().getApostropheKeyword_2_0()); }
	('\'')?
	{ after(grammarAccess.getBitFieldAccess().getApostropheKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitField__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitField__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitField__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitFieldAccess().getTypeAssignment_2_1()); }
	(rule__BitField__TypeAssignment_2_1)
	{ after(grammarAccess.getBitFieldAccess().getTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getAlternatives_0()); }
	(rule__Assignment__Alternatives_0)
	{ after(grammarAccess.getAssignmentAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getBitWidthAssignment_1()); }
	(rule__Assignment__BitWidthAssignment_1)?
	{ after(grammarAccess.getAssignmentAccess().getBitWidthAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__2__Impl
	rule__Assignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getLessThanSignEqualsSignKeyword_2()); }
	'<='
	{ after(grammarAccess.getAssignmentAccess().getLessThanSignEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__3__Impl
	rule__Assignment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getExpressionAssignment_3()); }
	(rule__Assignment__ExpressionAssignment_3)
	{ after(grammarAccess.getAssignmentAccess().getExpressionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getAssignmentAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_0_0__0__Impl
	rule__Assignment__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getIndexedAssignmentAction_0_0_0()); }
	()
	{ after(grammarAccess.getAssignmentAccess().getIndexedAssignmentAction_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_0_0__1__Impl
	rule__Assignment__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getToAssignment_0_0_1()); }
	(rule__Assignment__ToAssignment_0_0_1)
	{ after(grammarAccess.getAssignmentAccess().getToAssignment_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_0_0__2__Impl
	rule__Assignment__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getLeftSquareBracketKeyword_0_0_2()); }
	'['
	{ after(grammarAccess.getAssignmentAccess().getLeftSquareBracketKeyword_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_0_0__3__Impl
	rule__Assignment__Group_0_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getIndexAssignment_0_0_3()); }
	(rule__Assignment__IndexAssignment_0_0_3)
	{ after(grammarAccess.getAssignmentAccess().getIndexAssignment_0_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_0_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getRightSquareBracketKeyword_0_0_4()); }
	']'
	{ after(grammarAccess.getAssignmentAccess().getRightSquareBracketKeyword_0_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_0_1__0__Impl
	rule__Assignment__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getRegisterAssignmentAction_0_1_0()); }
	()
	{ after(grammarAccess.getAssignmentAccess().getRegisterAssignmentAction_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getToAssignment_0_1_1()); }
	(rule__Assignment__ToAssignment_0_1_1)
	{ after(grammarAccess.getAssignmentAccess().getToAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_0_2__0__Impl
	rule__Assignment__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getScalarAssignmentAction_0_2_0()); }
	()
	{ after(grammarAccess.getAssignmentAccess().getScalarAssignmentAction_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getToAssignment_0_2_1()); }
	(rule__Assignment__ToAssignment_0_2_1)
	{ after(grammarAccess.getAssignmentAccess().getToAssignment_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStmt__Group__0__Impl
	rule__ConditionalStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStmtAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getConditionalStmtAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStmt__Group__1__Impl
	rule__ConditionalStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStmtAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getConditionalStmtAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStmt__Group__2__Impl
	rule__ConditionalStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStmtAccess().getCondAssignment_2()); }
	(rule__ConditionalStmt__CondAssignment_2)
	{ after(grammarAccess.getConditionalStmtAccess().getCondAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStmt__Group__3__Impl
	rule__ConditionalStmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStmtAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getConditionalStmtAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStmt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStmt__Group__4__Impl
	rule__ConditionalStmt__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStmt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStmtAccess().getAlternatives_4()); }
	(rule__ConditionalStmt__Alternatives_4)
	{ after(grammarAccess.getConditionalStmtAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStmt__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStmt__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStmt__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStmtAccess().getGroup_5()); }
	(rule__ConditionalStmt__Group_5__0)?
	{ after(grammarAccess.getConditionalStmtAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalStmt__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStmt__Group_4_1__0__Impl
	rule__ConditionalStmt__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStmt__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStmtAccess().getLeftCurlyBracketKeyword_4_1_0()); }
	'{'
	{ after(grammarAccess.getConditionalStmtAccess().getLeftCurlyBracketKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStmt__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStmt__Group_4_1__1__Impl
	rule__ConditionalStmt__Group_4_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStmt__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getConditionalStmtAccess().getThenStmtsAssignment_4_1_1()); }
		(rule__ConditionalStmt__ThenStmtsAssignment_4_1_1)
		{ after(grammarAccess.getConditionalStmtAccess().getThenStmtsAssignment_4_1_1()); }
	)
	(
		{ before(grammarAccess.getConditionalStmtAccess().getThenStmtsAssignment_4_1_1()); }
		(rule__ConditionalStmt__ThenStmtsAssignment_4_1_1)*
		{ after(grammarAccess.getConditionalStmtAccess().getThenStmtsAssignment_4_1_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStmt__Group_4_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStmt__Group_4_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStmt__Group_4_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStmtAccess().getRightCurlyBracketKeyword_4_1_2()); }
	'}'
	{ after(grammarAccess.getConditionalStmtAccess().getRightCurlyBracketKeyword_4_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalStmt__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStmt__Group_5__0__Impl
	rule__ConditionalStmt__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStmt__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStmtAccess().getElseKeyword_5_0()); }
	('else')
	{ after(grammarAccess.getConditionalStmtAccess().getElseKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStmt__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStmt__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStmt__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStmtAccess().getAlternatives_5_1()); }
	(rule__ConditionalStmt__Alternatives_5_1)
	{ after(grammarAccess.getConditionalStmtAccess().getAlternatives_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalStmt__Group_5_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStmt__Group_5_1_1__0__Impl
	rule__ConditionalStmt__Group_5_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStmt__Group_5_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStmtAccess().getLeftCurlyBracketKeyword_5_1_1_0()); }
	'{'
	{ after(grammarAccess.getConditionalStmtAccess().getLeftCurlyBracketKeyword_5_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStmt__Group_5_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStmt__Group_5_1_1__1__Impl
	rule__ConditionalStmt__Group_5_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStmt__Group_5_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getConditionalStmtAccess().getElseStmtsAssignment_5_1_1_1()); }
		(rule__ConditionalStmt__ElseStmtsAssignment_5_1_1_1)
		{ after(grammarAccess.getConditionalStmtAccess().getElseStmtsAssignment_5_1_1_1()); }
	)
	(
		{ before(grammarAccess.getConditionalStmtAccess().getElseStmtsAssignment_5_1_1_1()); }
		(rule__ConditionalStmt__ElseStmtsAssignment_5_1_1_1)*
		{ after(grammarAccess.getConditionalStmtAccess().getElseStmtsAssignment_5_1_1_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStmt__Group_5_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStmt__Group_5_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStmt__Group_5_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStmtAccess().getRightCurlyBracketKeyword_5_1_1_2()); }
	'}'
	{ after(grammarAccess.getConditionalStmtAccess().getRightCurlyBracketKeyword_5_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectCode__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectCode__Group__0__Impl
	rule__DirectCode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectCode__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectCodeAccess().getCKeyword_0()); }
	'C++'
	{ after(grammarAccess.getDirectCodeAccess().getCKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectCode__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectCode__Group__1__Impl
	rule__DirectCode__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectCode__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectCodeAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getDirectCodeAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectCode__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectCode__Group__2__Impl
	rule__DirectCode__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectCode__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectCodeAccess().getCodeAssignment_2()); }
	(rule__DirectCode__CodeAssignment_2)
	{ after(grammarAccess.getDirectCodeAccess().getCodeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectCode__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectCode__Group__3__Impl
	rule__DirectCode__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectCode__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectCodeAccess().getCodeAssignment_3()); }
	(rule__DirectCode__CodeAssignment_3)*
	{ after(grammarAccess.getDirectCodeAccess().getCodeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectCode__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectCode__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectCode__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectCodeAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getDirectCodeAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure__Group__0__Impl
	rule__Procedure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedureAccess().getNameAssignment_0()); }
	(rule__Procedure__NameAssignment_0)
	{ after(grammarAccess.getProcedureAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure__Group__1__Impl
	rule__Procedure__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedureAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getProcedureAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure__Group__2__Impl
	rule__Procedure__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedureAccess().getArgsAssignment_2()); }
	(rule__Procedure__ArgsAssignment_2)
	{ after(grammarAccess.getProcedureAccess().getArgsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure__Group__3__Impl
	rule__Procedure__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedureAccess().getGroup_3()); }
	(rule__Procedure__Group_3__0)*
	{ after(grammarAccess.getProcedureAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure__Group__4__Impl
	rule__Procedure__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedureAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getProcedureAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedureAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getProcedureAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure__Group_3__0__Impl
	rule__Procedure__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedureAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getProcedureAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedureAccess().getArgsAssignment_3_1()); }
	(rule__Procedure__ArgsAssignment_3_1)
	{ after(grammarAccess.getProcedureAccess().getArgsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantDef__Group__0__Impl
	rule__ConstantDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantDefAccess().getNameAssignment_0()); }
	(rule__ConstantDef__NameAssignment_0)
	{ after(grammarAccess.getConstantDefAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantDef__Group__1__Impl
	rule__ConstantDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantDefAccess().getColonEqualsSignKeyword_1()); }
	':='
	{ after(grammarAccess.getConstantDefAccess().getColonEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantDef__Group__2__Impl
	rule__ConstantDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantDefAccess().getValueAssignment_2()); }
	(rule__ConstantDef__ValueAssignment_2)
	{ after(grammarAccess.getConstantDefAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantDef__Group__3__Impl
	rule__ConstantDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantDefAccess().getGroup_3()); }
	(rule__ConstantDef__Group_3__0)?
	{ after(grammarAccess.getConstantDefAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDef__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantDef__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDef__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantDefAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getConstantDefAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDef__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantDef__Group_3__0__Impl
	rule__ConstantDef__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDef__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantDefAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getConstantDefAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDef__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantDef__Group_3__1__Impl
	rule__ConstantDef__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDef__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantDefAccess().getAttributesAssignment_3_1()); }
	(rule__ConstantDef__AttributesAssignment_3_1)
	{ after(grammarAccess.getConstantDefAccess().getAttributesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDef__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantDef__Group_3__2__Impl
	rule__ConstantDef__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDef__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantDefAccess().getGroup_3_2()); }
	(rule__ConstantDef__Group_3_2__0)*
	{ after(grammarAccess.getConstantDefAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDef__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantDef__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDef__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantDefAccess().getRightParenthesisKeyword_3_3()); }
	')'
	{ after(grammarAccess.getConstantDefAccess().getRightParenthesisKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDef__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantDef__Group_3_2__0__Impl
	rule__ConstantDef__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDef__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantDefAccess().getCommaKeyword_3_2_0()); }
	','
	{ after(grammarAccess.getConstantDefAccess().getCommaKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDef__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantDef__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDef__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantDefAccess().getAttributesAssignment_3_2_1()); }
	(rule__ConstantDef__AttributesAssignment_3_2_1)
	{ after(grammarAccess.getConstantDefAccess().getAttributesAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantDecl__Group__0__Impl
	rule__ConstantDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantDeclAccess().getNameAssignment_0()); }
	(rule__ConstantDecl__NameAssignment_0)
	{ after(grammarAccess.getConstantDeclAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantDeclAccess().getConstantDefaultAssignment_1()); }
	(rule__ConstantDecl__ConstantDefaultAssignment_1)?
	{ after(grammarAccess.getConstantDeclAccess().getConstantDefaultAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDefault__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantDefault__Group__0__Impl
	rule__ConstantDefault__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefault__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantDefaultAccess().getColonEqualsSignKeyword_0()); }
	':='
	{ after(grammarAccess.getConstantDefaultAccess().getColonEqualsSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefault__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantDefault__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefault__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantDefaultAccess().getDefaultValueAssignment_1()); }
	(rule__ConstantDefault__DefaultValueAssignment_1)
	{ after(grammarAccess.getConstantDefaultAccess().getDefaultValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddressSpace__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddressSpace__Group__0__Impl
	rule__AddressSpace__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddressSpace__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddressSpaceAccess().getNameAssignment_0()); }
	(rule__AddressSpace__NameAssignment_0)
	{ after(grammarAccess.getAddressSpaceAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddressSpace__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddressSpace__Group__1__Impl
	rule__AddressSpace__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddressSpace__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddressSpaceAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getAddressSpaceAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddressSpace__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddressSpace__Group__2__Impl
	rule__AddressSpace__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AddressSpace__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddressSpaceAccess().getAlternatives_2()); }
	(rule__AddressSpace__Alternatives_2)
	{ after(grammarAccess.getAddressSpaceAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddressSpace__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddressSpace__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddressSpace__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddressSpaceAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getAddressSpaceAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegisterFile__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegisterFile__Group__0__Impl
	rule__RegisterFile__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterFile__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterFileAccess().getGroup_0()); }
	(rule__RegisterFile__Group_0__0)
	{ after(grammarAccess.getRegisterFileAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterFile__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegisterFile__Group__1__Impl
	rule__RegisterFile__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterFile__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterFileAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getRegisterFileAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterFile__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegisterFile__Group__2__Impl
	rule__RegisterFile__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterFile__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterFileAccess().getAlternatives_2()); }
	(rule__RegisterFile__Alternatives_2)
	{ after(grammarAccess.getRegisterFileAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterFile__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegisterFile__Group__3__Impl
	rule__RegisterFile__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterFile__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterFileAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getRegisterFileAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterFile__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegisterFile__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterFile__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterFileAccess().getGroup_4()); }
	(rule__RegisterFile__Group_4__0)?
	{ after(grammarAccess.getRegisterFileAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegisterFile__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegisterFile__Group_0__0__Impl
	rule__RegisterFile__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterFile__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterFileAccess().getRangeAssignment_0_0()); }
	(rule__RegisterFile__RangeAssignment_0_0)
	{ after(grammarAccess.getRegisterFileAccess().getRangeAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterFile__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegisterFile__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterFile__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterFileAccess().getNameAssignment_0_1()); }
	(rule__RegisterFile__NameAssignment_0_1)
	{ after(grammarAccess.getRegisterFileAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegisterFile__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegisterFile__Group_4__0__Impl
	rule__RegisterFile__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterFile__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterFileAccess().getLeftParenthesisKeyword_4_0()); }
	'('
	{ after(grammarAccess.getRegisterFileAccess().getLeftParenthesisKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterFile__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegisterFile__Group_4__1__Impl
	rule__RegisterFile__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterFile__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterFileAccess().getAttributesAssignment_4_1()); }
	(rule__RegisterFile__AttributesAssignment_4_1)
	{ after(grammarAccess.getRegisterFileAccess().getAttributesAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterFile__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegisterFile__Group_4__2__Impl
	rule__RegisterFile__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterFile__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterFileAccess().getGroup_4_2()); }
	(rule__RegisterFile__Group_4_2__0)*
	{ after(grammarAccess.getRegisterFileAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterFile__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegisterFile__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterFile__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterFileAccess().getRightParenthesisKeyword_4_3()); }
	')'
	{ after(grammarAccess.getRegisterFileAccess().getRightParenthesisKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegisterFile__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegisterFile__Group_4_2__0__Impl
	rule__RegisterFile__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterFile__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterFileAccess().getCommaKeyword_4_2_0()); }
	','
	{ after(grammarAccess.getRegisterFileAccess().getCommaKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterFile__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegisterFile__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterFile__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterFileAccess().getAttributesAssignment_4_2_1()); }
	(rule__RegisterFile__AttributesAssignment_4_2_1)
	{ after(grammarAccess.getRegisterFileAccess().getAttributesAssignment_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Register__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Register__Group__0__Impl
	rule__Register__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Register__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterAccess().getNameAssignment_0()); }
	(rule__Register__NameAssignment_0)
	{ after(grammarAccess.getRegisterAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Register__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Register__Group__1__Impl
	rule__Register__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Register__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getRegisterAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Register__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Register__Group__2__Impl
	rule__Register__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Register__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterAccess().getAlternatives_2()); }
	(rule__Register__Alternatives_2)
	{ after(grammarAccess.getRegisterAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Register__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Register__Group__3__Impl
	rule__Register__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Register__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getRegisterAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Register__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Register__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Register__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterAccess().getGroup_4()); }
	(rule__Register__Group_4__0)?
	{ after(grammarAccess.getRegisterAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Register__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Register__Group_4__0__Impl
	rule__Register__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Register__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterAccess().getLeftParenthesisKeyword_4_0()); }
	'('
	{ after(grammarAccess.getRegisterAccess().getLeftParenthesisKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Register__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Register__Group_4__1__Impl
	rule__Register__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Register__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterAccess().getAttributesAssignment_4_1()); }
	(rule__Register__AttributesAssignment_4_1)
	{ after(grammarAccess.getRegisterAccess().getAttributesAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Register__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Register__Group_4__2__Impl
	rule__Register__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Register__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterAccess().getGroup_4_2()); }
	(rule__Register__Group_4_2__0)*
	{ after(grammarAccess.getRegisterAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Register__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Register__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Register__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterAccess().getRightParenthesisKeyword_4_3()); }
	')'
	{ after(grammarAccess.getRegisterAccess().getRightParenthesisKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Register__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Register__Group_4_2__0__Impl
	rule__Register__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Register__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterAccess().getCommaKeyword_4_2_0()); }
	','
	{ after(grammarAccess.getRegisterAccess().getCommaKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Register__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Register__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Register__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterAccess().getAttributesAssignment_4_2_1()); }
	(rule__Register__AttributesAssignment_4_2_1)
	{ after(grammarAccess.getRegisterAccess().getAttributesAssignment_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegisterAlias__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegisterAlias__Group__0__Impl
	rule__RegisterAlias__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterAliasAccess().getAliasKeyword_0()); }
	'alias'
	{ after(grammarAccess.getRegisterAliasAccess().getAliasKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegisterAlias__Group__1__Impl
	rule__RegisterAlias__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterAliasAccess().getNameAssignment_1()); }
	(rule__RegisterAlias__NameAssignment_1)
	{ after(grammarAccess.getRegisterAliasAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegisterAlias__Group__2__Impl
	rule__RegisterAlias__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterAliasAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getRegisterAliasAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegisterAlias__Group__3__Impl
	rule__RegisterAlias__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterAliasAccess().getAlternatives_3()); }
	(rule__RegisterAlias__Alternatives_3)
	{ after(grammarAccess.getRegisterAliasAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegisterAlias__Group__4__Impl
	rule__RegisterAlias__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterAliasAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getRegisterAliasAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegisterAlias__Group__5__Impl
	rule__RegisterAlias__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterAliasAccess().getGroup_5()); }
	(rule__RegisterAlias__Group_5__0)?
	{ after(grammarAccess.getRegisterAliasAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegisterAlias__Group__6__Impl
	rule__RegisterAlias__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterAliasAccess().getIsKeyword_6()); }
	'is'
	{ after(grammarAccess.getRegisterAliasAccess().getIsKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegisterAlias__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterAliasAccess().getAlternatives_7()); }
	(rule__RegisterAlias__Alternatives_7)
	{ after(grammarAccess.getRegisterAliasAccess().getAlternatives_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegisterAlias__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegisterAlias__Group_5__0__Impl
	rule__RegisterAlias__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterAliasAccess().getLeftParenthesisKeyword_5_0()); }
	'('
	{ after(grammarAccess.getRegisterAliasAccess().getLeftParenthesisKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegisterAlias__Group_5__1__Impl
	rule__RegisterAlias__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterAliasAccess().getAttributesAssignment_5_1()); }
	(rule__RegisterAlias__AttributesAssignment_5_1)
	{ after(grammarAccess.getRegisterAliasAccess().getAttributesAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegisterAlias__Group_5__2__Impl
	rule__RegisterAlias__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterAliasAccess().getGroup_5_2()); }
	(rule__RegisterAlias__Group_5_2__0)*
	{ after(grammarAccess.getRegisterAliasAccess().getGroup_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegisterAlias__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterAliasAccess().getRightParenthesisKeyword_5_3()); }
	')'
	{ after(grammarAccess.getRegisterAliasAccess().getRightParenthesisKeyword_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegisterAlias__Group_5_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegisterAlias__Group_5_2__0__Impl
	rule__RegisterAlias__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Group_5_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterAliasAccess().getCommaKeyword_5_2_0()); }
	','
	{ after(grammarAccess.getRegisterAliasAccess().getCommaKeyword_5_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Group_5_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegisterAlias__Group_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Group_5_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterAliasAccess().getAttributesAssignment_5_2_1()); }
	(rule__RegisterAlias__AttributesAssignment_5_2_1)
	{ after(grammarAccess.getRegisterAliasAccess().getAttributesAssignment_5_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegisterAlias__Group_7_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegisterAlias__Group_7_1__0__Impl
	rule__RegisterAlias__Group_7_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Group_7_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterAliasAccess().getOriginalAssignment_7_1_0()); }
	(rule__RegisterAlias__OriginalAssignment_7_1_0)
	{ after(grammarAccess.getRegisterAliasAccess().getOriginalAssignment_7_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Group_7_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegisterAlias__Group_7_1__1__Impl
	rule__RegisterAlias__Group_7_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Group_7_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterAliasAccess().getLeftSquareBracketKeyword_7_1_1()); }
	'['
	{ after(grammarAccess.getRegisterAliasAccess().getLeftSquareBracketKeyword_7_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Group_7_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegisterAlias__Group_7_1__2__Impl
	rule__RegisterAlias__Group_7_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Group_7_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterAliasAccess().getAlternatives_7_1_2()); }
	(rule__RegisterAlias__Alternatives_7_1_2)
	{ after(grammarAccess.getRegisterAliasAccess().getAlternatives_7_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Group_7_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegisterAlias__Group_7_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__Group_7_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegisterAliasAccess().getRightSquareBracketKeyword_7_1_3()); }
	']'
	{ after(grammarAccess.getRegisterAliasAccess().getRightSquareBracketKeyword_7_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scalar__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scalar__Group__0__Impl
	rule__Scalar__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scalar__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScalarAccess().getValKeyword_0()); }
	'val'
	{ after(grammarAccess.getScalarAccess().getValKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scalar__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scalar__Group__1__Impl
	rule__Scalar__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Scalar__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScalarAccess().getNameAssignment_1()); }
	(rule__Scalar__NameAssignment_1)
	{ after(grammarAccess.getScalarAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scalar__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scalar__Group__2__Impl
	rule__Scalar__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Scalar__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScalarAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getScalarAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scalar__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scalar__Group__3__Impl
	rule__Scalar__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Scalar__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScalarAccess().getAlternatives_3()); }
	(rule__Scalar__Alternatives_3)
	{ after(grammarAccess.getScalarAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scalar__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scalar__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scalar__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScalarAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getScalarAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanOrExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOrExpr__Group__0__Impl
	rule__BooleanOrExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOrExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanOrExprAccess().getBooleanAndExprParserRuleCall_0()); }
	ruleBooleanAndExpr
	{ after(grammarAccess.getBooleanOrExprAccess().getBooleanAndExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOrExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOrExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOrExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanOrExprAccess().getGroup_1()); }
	(rule__BooleanOrExpr__Group_1__0)*
	{ after(grammarAccess.getBooleanOrExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanOrExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOrExpr__Group_1__0__Impl
	rule__BooleanOrExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOrExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanOrExprAccess().getBooleanExprLeftAction_1_0()); }
	()
	{ after(grammarAccess.getBooleanOrExprAccess().getBooleanExprLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOrExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOrExpr__Group_1__1__Impl
	rule__BooleanOrExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOrExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanOrExprAccess().getOpAssignment_1_1()); }
	(rule__BooleanOrExpr__OpAssignment_1_1)
	{ after(grammarAccess.getBooleanOrExprAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOrExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOrExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOrExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanOrExprAccess().getRightAssignment_1_2()); }
	(rule__BooleanOrExpr__RightAssignment_1_2)
	{ after(grammarAccess.getBooleanOrExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanAndExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanAndExpr__Group__0__Impl
	rule__BooleanAndExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAndExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanAndExprAccess().getBitOrExprParserRuleCall_0()); }
	ruleBitOrExpr
	{ after(grammarAccess.getBooleanAndExprAccess().getBitOrExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAndExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanAndExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAndExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanAndExprAccess().getGroup_1()); }
	(rule__BooleanAndExpr__Group_1__0)*
	{ after(grammarAccess.getBooleanAndExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanAndExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanAndExpr__Group_1__0__Impl
	rule__BooleanAndExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAndExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanAndExprAccess().getBooleanExprLeftAction_1_0()); }
	()
	{ after(grammarAccess.getBooleanAndExprAccess().getBooleanExprLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAndExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanAndExpr__Group_1__1__Impl
	rule__BooleanAndExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAndExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanAndExprAccess().getOpAssignment_1_1()); }
	(rule__BooleanAndExpr__OpAssignment_1_1)
	{ after(grammarAccess.getBooleanAndExprAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAndExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanAndExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAndExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanAndExprAccess().getRightAssignment_1_2()); }
	(rule__BooleanAndExpr__RightAssignment_1_2)
	{ after(grammarAccess.getBooleanAndExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BitOrExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitOrExpr__Group__0__Impl
	rule__BitOrExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitOrExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitOrExprAccess().getBitXOrExprParserRuleCall_0()); }
	ruleBitXOrExpr
	{ after(grammarAccess.getBitOrExprAccess().getBitXOrExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitOrExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitOrExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitOrExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitOrExprAccess().getGroup_1()); }
	(rule__BitOrExpr__Group_1__0)*
	{ after(grammarAccess.getBitOrExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BitOrExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitOrExpr__Group_1__0__Impl
	rule__BitOrExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitOrExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitOrExprAccess().getBitExprLeftAction_1_0()); }
	()
	{ after(grammarAccess.getBitOrExprAccess().getBitExprLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitOrExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitOrExpr__Group_1__1__Impl
	rule__BitOrExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BitOrExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitOrExprAccess().getOpAssignment_1_1()); }
	(rule__BitOrExpr__OpAssignment_1_1)
	{ after(grammarAccess.getBitOrExprAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitOrExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitOrExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitOrExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitOrExprAccess().getRightAssignment_1_2()); }
	(rule__BitOrExpr__RightAssignment_1_2)
	{ after(grammarAccess.getBitOrExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BitXOrExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitXOrExpr__Group__0__Impl
	rule__BitXOrExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitXOrExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitXOrExprAccess().getBitAndExprParserRuleCall_0()); }
	ruleBitAndExpr
	{ after(grammarAccess.getBitXOrExprAccess().getBitAndExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitXOrExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitXOrExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitXOrExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitXOrExprAccess().getGroup_1()); }
	(rule__BitXOrExpr__Group_1__0)*
	{ after(grammarAccess.getBitXOrExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BitXOrExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitXOrExpr__Group_1__0__Impl
	rule__BitXOrExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitXOrExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitXOrExprAccess().getBitExprLeftAction_1_0()); }
	()
	{ after(grammarAccess.getBitXOrExprAccess().getBitExprLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitXOrExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitXOrExpr__Group_1__1__Impl
	rule__BitXOrExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BitXOrExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitXOrExprAccess().getOpAssignment_1_1()); }
	(rule__BitXOrExpr__OpAssignment_1_1)
	{ after(grammarAccess.getBitXOrExprAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitXOrExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitXOrExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitXOrExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitXOrExprAccess().getRightAssignment_1_2()); }
	(rule__BitXOrExpr__RightAssignment_1_2)
	{ after(grammarAccess.getBitXOrExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BitAndExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitAndExpr__Group__0__Impl
	rule__BitAndExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitAndExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitAndExprAccess().getEqualityExprParserRuleCall_0()); }
	ruleEqualityExpr
	{ after(grammarAccess.getBitAndExprAccess().getEqualityExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitAndExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitAndExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitAndExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitAndExprAccess().getGroup_1()); }
	(rule__BitAndExpr__Group_1__0)*
	{ after(grammarAccess.getBitAndExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BitAndExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitAndExpr__Group_1__0__Impl
	rule__BitAndExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitAndExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitAndExprAccess().getBitExprLeftAction_1_0()); }
	()
	{ after(grammarAccess.getBitAndExprAccess().getBitExprLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitAndExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitAndExpr__Group_1__1__Impl
	rule__BitAndExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BitAndExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitAndExprAccess().getOpAssignment_1_1()); }
	(rule__BitAndExpr__OpAssignment_1_1)
	{ after(grammarAccess.getBitAndExprAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitAndExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitAndExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitAndExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitAndExprAccess().getRightAssignment_1_2()); }
	(rule__BitAndExpr__RightAssignment_1_2)
	{ after(grammarAccess.getBitAndExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpr__Group__0__Impl
	rule__EqualityExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExprAccess().getComparisonExprParserRuleCall_0()); }
	ruleComparisonExpr
	{ after(grammarAccess.getEqualityExprAccess().getComparisonExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExprAccess().getGroup_1()); }
	(rule__EqualityExpr__Group_1__0)*
	{ after(grammarAccess.getEqualityExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpr__Group_1__0__Impl
	rule__EqualityExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExprAccess().getComparisonExprLeftAction_1_0()); }
	()
	{ after(grammarAccess.getEqualityExprAccess().getComparisonExprLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpr__Group_1__1__Impl
	rule__EqualityExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExprAccess().getOpAssignment_1_1()); }
	(rule__EqualityExpr__OpAssignment_1_1)
	{ after(grammarAccess.getEqualityExprAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExprAccess().getRightAssignment_1_2()); }
	(rule__EqualityExpr__RightAssignment_1_2)
	{ after(grammarAccess.getEqualityExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpr__Group__0__Impl
	rule__ComparisonExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExprAccess().getShiftExprParserRuleCall_0()); }
	ruleShiftExpr
	{ after(grammarAccess.getComparisonExprAccess().getShiftExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExprAccess().getGroup_1()); }
	(rule__ComparisonExpr__Group_1__0)*
	{ after(grammarAccess.getComparisonExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpr__Group_1__0__Impl
	rule__ComparisonExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExprAccess().getComparisonExprLeftAction_1_0()); }
	()
	{ after(grammarAccess.getComparisonExprAccess().getComparisonExprLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpr__Group_1__1__Impl
	rule__ComparisonExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExprAccess().getOpAssignment_1_1()); }
	(rule__ComparisonExpr__OpAssignment_1_1)
	{ after(grammarAccess.getComparisonExprAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExprAccess().getRightAssignment_1_2()); }
	(rule__ComparisonExpr__RightAssignment_1_2)
	{ after(grammarAccess.getComparisonExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShiftExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShiftExpr__Group__0__Impl
	rule__ShiftExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShiftExprAccess().getAdditionExprParserRuleCall_0()); }
	ruleAdditionExpr
	{ after(grammarAccess.getShiftExprAccess().getAdditionExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShiftExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShiftExprAccess().getGroup_1()); }
	(rule__ShiftExpr__Group_1__0)*
	{ after(grammarAccess.getShiftExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShiftExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShiftExpr__Group_1__0__Impl
	rule__ShiftExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShiftExprAccess().getShiftExprLeftAction_1_0()); }
	()
	{ after(grammarAccess.getShiftExprAccess().getShiftExprLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShiftExpr__Group_1__1__Impl
	rule__ShiftExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShiftExprAccess().getOpAssignment_1_1()); }
	(rule__ShiftExpr__OpAssignment_1_1)
	{ after(grammarAccess.getShiftExprAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShiftExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShiftExprAccess().getRightAssignment_1_2()); }
	(rule__ShiftExpr__RightAssignment_1_2)
	{ after(grammarAccess.getShiftExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionExpr__Group__0__Impl
	rule__AdditionExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionExprAccess().getMultiplicationExprParserRuleCall_0()); }
	ruleMultiplicationExpr
	{ after(grammarAccess.getAdditionExprAccess().getMultiplicationExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionExprAccess().getGroup_1()); }
	(rule__AdditionExpr__Group_1__0)*
	{ after(grammarAccess.getAdditionExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionExpr__Group_1__0__Impl
	rule__AdditionExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionExprAccess().getAdditionExprLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAdditionExprAccess().getAdditionExprLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionExpr__Group_1__1__Impl
	rule__AdditionExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionExprAccess().getOpAssignment_1_1()); }
	(rule__AdditionExpr__OpAssignment_1_1)
	{ after(grammarAccess.getAdditionExprAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionExprAccess().getRightAssignment_1_2()); }
	(rule__AdditionExpr__RightAssignment_1_2)
	{ after(grammarAccess.getAdditionExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationExpr__Group__0__Impl
	rule__MultiplicationExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationExprAccess().getUnitaryExprParserRuleCall_0()); }
	ruleUnitaryExpr
	{ after(grammarAccess.getMultiplicationExprAccess().getUnitaryExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationExprAccess().getGroup_1()); }
	(rule__MultiplicationExpr__Group_1__0)*
	{ after(grammarAccess.getMultiplicationExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationExpr__Group_1__0__Impl
	rule__MultiplicationExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationExprAccess().getMultiplicationExprLeftAction_1_0()); }
	()
	{ after(grammarAccess.getMultiplicationExprAccess().getMultiplicationExprLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationExpr__Group_1__1__Impl
	rule__MultiplicationExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationExprAccess().getOpAssignment_1_1()); }
	(rule__MultiplicationExpr__OpAssignment_1_1)
	{ after(grammarAccess.getMultiplicationExprAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationExprAccess().getRightAssignment_1_2()); }
	(rule__MultiplicationExpr__RightAssignment_1_2)
	{ after(grammarAccess.getMultiplicationExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitaryExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitaryExpr__Group_1__0__Impl
	rule__UnitaryExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitaryExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitaryExprAccess().getUnitaryExprAction_1_0()); }
	()
	{ after(grammarAccess.getUnitaryExprAccess().getUnitaryExprAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitaryExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitaryExpr__Group_1__1__Impl
	rule__UnitaryExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitaryExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitaryExprAccess().getOpAssignment_1_1()); }
	(rule__UnitaryExpr__OpAssignment_1_1)
	{ after(grammarAccess.getUnitaryExprAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitaryExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitaryExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitaryExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitaryExprAccess().getExprAssignment_1_2()); }
	(rule__UnitaryExpr__ExprAssignment_1_2)
	{ after(grammarAccess.getUnitaryExprAccess().getExprAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeConv__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeConv__Group__0__Impl
	rule__TypeConv__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConv__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeConvAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getTypeConvAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConv__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeConv__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConv__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeConvAccess().getGroup_1()); }
	(rule__TypeConv__Group_1__0)?
	{ after(grammarAccess.getTypeConvAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeConv__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeConv__Group_1__0__Impl
	rule__TypeConv__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConv__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeConvAccess().getTypeConvExprAction_1_0()); }
	()
	{ after(grammarAccess.getTypeConvAccess().getTypeConvExprAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConv__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeConv__Group_1__1__Impl
	rule__TypeConv__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConv__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeConvAccess().getApostropheKeyword_1_1()); }
	('\'')?
	{ after(grammarAccess.getTypeConvAccess().getApostropheKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConv__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeConv__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConv__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeConvAccess().getTypeAssignment_1_2()); }
	(rule__TypeConv__TypeAssignment_1_2)
	{ after(grammarAccess.getTypeConvAccess().getTypeAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__0__Impl
	rule__Primary__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__1__Impl
	rule__Primary__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpressionParserRuleCall_0_1()); }
	ruleExpression
	{ after(grammarAccess.getPrimaryAccess().getExpressionParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__0__Impl
	rule__Primary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getFunctionAction_1_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getFunctionAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__1__Impl
	rule__Primary__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getNameAssignment_1_1()); }
	(rule__Primary__NameAssignment_1_1)
	{ after(grammarAccess.getPrimaryAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__2__Impl
	rule__Primary__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_1_2()); }
	'('
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__3__Impl
	rule__Primary__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getGroup_1_3()); }
	(rule__Primary__Group_1_3__0)?
	{ after(grammarAccess.getPrimaryAccess().getGroup_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_1_4()); }
	')'
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1_3__0__Impl
	rule__Primary__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getArgsAssignment_1_3_0()); }
	(rule__Primary__ArgsAssignment_1_3_0)
	{ after(grammarAccess.getPrimaryAccess().getArgsAssignment_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getGroup_1_3_1()); }
	(rule__Primary__Group_1_3_1__0)*
	{ after(grammarAccess.getPrimaryAccess().getGroup_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_1_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1_3_1__0__Impl
	rule__Primary__Group_1_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getCommaKeyword_1_3_1_0()); }
	','
	{ after(grammarAccess.getPrimaryAccess().getCommaKeyword_1_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getArgsAssignment_1_3_1_1()); }
	(rule__Primary__ArgsAssignment_1_3_1_1)
	{ after(grammarAccess.getPrimaryAccess().getArgsAssignment_1_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueRef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueRef__Group__0__Impl
	rule__ValueRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueRefAccess().getAlternatives_0()); }
	(rule__ValueRef__Alternatives_0)
	{ after(grammarAccess.getValueRefAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueRef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueRefAccess().getBitWidthAssignment_1()); }
	(rule__ValueRef__BitWidthAssignment_1)?
	{ after(grammarAccess.getValueRefAccess().getBitWidthAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueRef__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueRef__Group_0_0__0__Impl
	rule__ValueRef__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRef__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueRefAccess().getValueAssignment_0_0_0()); }
	(rule__ValueRef__ValueAssignment_0_0_0)
	{ after(grammarAccess.getValueRefAccess().getValueAssignment_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRef__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueRef__Group_0_0__1__Impl
	rule__ValueRef__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRef__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueRefAccess().getLeftSquareBracketKeyword_0_0_1()); }
	'['
	{ after(grammarAccess.getValueRefAccess().getLeftSquareBracketKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRef__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueRef__Group_0_0__2__Impl
	rule__ValueRef__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRef__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueRefAccess().getIndexAssignment_0_0_2()); }
	(rule__ValueRef__IndexAssignment_0_0_2)
	{ after(grammarAccess.getValueRefAccess().getIndexAssignment_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRef__Group_0_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueRef__Group_0_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRef__Group_0_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueRefAccess().getRightSquareBracketKeyword_0_0_3()); }
	']'
	{ after(grammarAccess.getValueRefAccess().getRightSquareBracketKeyword_0_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BitSizeSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitSizeSpec__Group__0__Impl
	rule__BitSizeSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitSizeSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitSizeSpecAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getBitSizeSpecAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitSizeSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitSizeSpec__Group__1__Impl
	rule__BitSizeSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BitSizeSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitSizeSpecAccess().getAlternatives_1()); }
	(rule__BitSizeSpec__Alternatives_1)
	{ after(grammarAccess.getBitSizeSpecAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitSizeSpec__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitSizeSpec__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitSizeSpec__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitSizeSpecAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getBitSizeSpecAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__UnorderedGroup
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getInstructionAccess().getUnorderedGroup());
	}
:
	rule__Instruction__UnorderedGroup__0
	{getUnorderedGroupHelper().canLeave(grammarAccess.getInstructionAccess().getUnorderedGroup())}?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getInstructionAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__Instruction__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getInstructionAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getInstructionAccess().getUnorderedGroup(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getInstructionAccess().getGroup_0()); }
					(rule__Instruction__Group_0__0)
					{ after(grammarAccess.getInstructionAccess().getGroup_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getInstructionAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getInstructionAccess().getUnorderedGroup(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getInstructionAccess().getGroup_1()); }
					(rule__Instruction__Group_1__0)
					{ after(grammarAccess.getInstructionAccess().getGroup_1()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInstructionAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__Instruction__UnorderedGroup__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__UnorderedGroup__Impl
	rule__Instruction__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__UnorderedGroup__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__DescriptionContent__ImportsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDescriptionContentAccess().getImportsImportParserRuleCall_0_0()); }
		ruleImport
		{ after(grammarAccess.getDescriptionContentAccess().getImportsImportParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DescriptionContent__DefinitionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDescriptionContentAccess().getDefinitionsISAParserRuleCall_1_0()); }
		ruleISA
		{ after(grammarAccess.getDescriptionContentAccess().getDefinitionsISAParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionSetAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getInstructionSetAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__SuperTypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionSetAccess().getSuperTypeInstructionSetCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getInstructionSetAccess().getSuperTypeInstructionSetIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getInstructionSetAccess().getSuperTypeInstructionSetIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getInstructionSetAccess().getSuperTypeInstructionSetCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__ConstantsAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionSetAccess().getConstantsConstantDeclParserRuleCall_4_2_0()); }
		ruleConstantDecl
		{ after(grammarAccess.getInstructionSetAccess().getConstantsConstantDeclParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__ConstantsAssignment_4_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionSetAccess().getConstantsConstantDeclParserRuleCall_4_3_1_0()); }
		ruleConstantDecl
		{ after(grammarAccess.getInstructionSetAccess().getConstantsConstantDeclParserRuleCall_4_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__SpacesAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionSetAccess().getSpacesAddressSpaceParserRuleCall_5_2_0()); }
		ruleAddressSpace
		{ after(grammarAccess.getInstructionSetAccess().getSpacesAddressSpaceParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__SpacesAssignment_5_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionSetAccess().getSpacesAddressSpaceParserRuleCall_5_3_1_0()); }
		ruleAddressSpace
		{ after(grammarAccess.getInstructionSetAccess().getSpacesAddressSpaceParserRuleCall_5_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__RegsAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionSetAccess().getRegsAlternatives_6_2_0()); }
		(rule__InstructionSet__RegsAlternatives_6_2_0)
		{ after(grammarAccess.getInstructionSetAccess().getRegsAlternatives_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__RegsAssignment_6_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionSetAccess().getRegsAlternatives_6_3_1_0()); }
		(rule__InstructionSet__RegsAlternatives_6_3_1_0)
		{ after(grammarAccess.getInstructionSetAccess().getRegsAlternatives_6_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionSet__InstrAssignment_7_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionSetAccess().getInstrInstructionParserRuleCall_7_2_0()); }
		ruleInstruction
		{ after(grammarAccess.getInstructionSetAccess().getInstrInstructionParserRuleCall_7_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoreDefAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCoreDefAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__ContributingTypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoreDefAccess().getContributingTypeInstructionSetCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getCoreDefAccess().getContributingTypeInstructionSetIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCoreDefAccess().getContributingTypeInstructionSetIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getCoreDefAccess().getContributingTypeInstructionSetCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__ContributingTypeAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoreDefAccess().getContributingTypeInstructionSetCrossReference_2_2_1_0()); }
		(
			{ before(grammarAccess.getCoreDefAccess().getContributingTypeInstructionSetIDTerminalRuleCall_2_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCoreDefAccess().getContributingTypeInstructionSetIDTerminalRuleCall_2_2_1_0_1()); }
		)
		{ after(grammarAccess.getCoreDefAccess().getContributingTypeInstructionSetCrossReference_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__TemplateNameAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoreDefAccess().getTemplateNameSTRINGTerminalRuleCall_4_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getCoreDefAccess().getTemplateNameSTRINGTerminalRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__ConstantsAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoreDefAccess().getConstantsConstantDefParserRuleCall_5_2_0()); }
		ruleConstantDef
		{ after(grammarAccess.getCoreDefAccess().getConstantsConstantDefParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__SpacesAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoreDefAccess().getSpacesAddressSpaceParserRuleCall_6_2_0()); }
		ruleAddressSpace
		{ after(grammarAccess.getCoreDefAccess().getSpacesAddressSpaceParserRuleCall_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__SpacesAssignment_6_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoreDefAccess().getSpacesAddressSpaceParserRuleCall_6_3_1_0()); }
		ruleAddressSpace
		{ after(grammarAccess.getCoreDefAccess().getSpacesAddressSpaceParserRuleCall_6_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__RegsAssignment_7_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoreDefAccess().getRegsAlternatives_7_2_0()); }
		(rule__CoreDef__RegsAlternatives_7_2_0)
		{ after(grammarAccess.getCoreDefAccess().getRegsAlternatives_7_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__RegsAssignment_7_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoreDefAccess().getRegsAlternatives_7_3_1_0()); }
		(rule__CoreDef__RegsAlternatives_7_3_1_0)
		{ after(grammarAccess.getCoreDefAccess().getRegsAlternatives_7_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoreDef__InstrAssignment_8_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoreDefAccess().getInstrInstructionParserRuleCall_8_2_0()); }
		ruleInstruction
		{ after(grammarAccess.getCoreDefAccess().getInstrInstructionParserRuleCall_8_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeSpec__LeftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeSpecAccess().getLeftNATURALTerminalRuleCall_1_0()); }
		RULE_NATURAL
		{ after(grammarAccess.getRangeSpecAccess().getLeftNATURALTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeSpec__RightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeSpecAccess().getRightNATURALTerminalRuleCall_3_0()); }
		RULE_NATURAL
		{ after(grammarAccess.getRangeSpecAccess().getRightNATURALTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__NameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getNameIDTerminalRuleCall_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getInstructionAccess().getNameIDTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__AttributesAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getAttributesInstrAttributeEnumRuleCall_0_1_1_0()); }
		ruleInstrAttribute
		{ after(grammarAccess.getInstructionAccess().getAttributesInstrAttributeEnumRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__AttributesAssignment_0_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getAttributesInstrAttributeEnumRuleCall_0_1_2_1_0()); }
		ruleInstrAttribute
		{ after(grammarAccess.getInstructionAccess().getAttributesInstrAttributeEnumRuleCall_0_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__EncodingAssignment_0_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getEncodingEncodingParserRuleCall_0_3_2_0()); }
		ruleEncoding
		{ after(grammarAccess.getInstructionAccess().getEncodingEncodingParserRuleCall_0_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__DisassAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getDisassSTRINGTerminalRuleCall_1_0_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getInstructionAccess().getDisassSTRINGTerminalRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__OperationAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getOperationOperationParserRuleCall_1_1_0()); }
		ruleOperation
		{ after(grammarAccess.getInstructionAccess().getOperationOperationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Encoding__FieldsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEncodingAccess().getFieldsFieldParserRuleCall_0_0()); }
		ruleField
		{ after(grammarAccess.getEncodingAccess().getFieldsFieldParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Encoding__FieldsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEncodingAccess().getFieldsFieldParserRuleCall_1_1_0()); }
		ruleField
		{ after(grammarAccess.getEncodingAccess().getFieldsFieldParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitValue__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitValueAccess().getNameBVALTerminalRuleCall_0()); }
		RULE_BVAL
		{ after(grammarAccess.getBitValueAccess().getNameBVALTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitField__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitFieldAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getBitFieldAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitField__BitRangeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitFieldAccess().getBitRangeRangeSpecParserRuleCall_1_0()); }
		ruleRangeSpec
		{ after(grammarAccess.getBitFieldAccess().getBitRangeRangeSpecParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitField__TypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitFieldAccess().getTypeDataTypeEnumRuleCall_2_1_0()); }
		ruleDataType
		{ after(grammarAccess.getBitFieldAccess().getTypeDataTypeEnumRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__StatementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getStatementsStatementParserRuleCall_0()); }
		ruleStatement
		{ after(grammarAccess.getOperationAccess().getStatementsStatementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ToAssignment_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getToIndexedVariableCrossReference_0_0_1_0()); }
		(
			{ before(grammarAccess.getAssignmentAccess().getToIndexedVariableIDTerminalRuleCall_0_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAssignmentAccess().getToIndexedVariableIDTerminalRuleCall_0_0_1_0_1()); }
		)
		{ after(grammarAccess.getAssignmentAccess().getToIndexedVariableCrossReference_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__IndexAssignment_0_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getIndexExpressionParserRuleCall_0_0_3_0()); }
		ruleExpression
		{ after(grammarAccess.getAssignmentAccess().getIndexExpressionParserRuleCall_0_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ToAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getToRegisterVariableCrossReference_0_1_1_0()); }
		(
			{ before(grammarAccess.getAssignmentAccess().getToRegisterVariableIDTerminalRuleCall_0_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAssignmentAccess().getToRegisterVariableIDTerminalRuleCall_0_1_1_0_1()); }
		)
		{ after(grammarAccess.getAssignmentAccess().getToRegisterVariableCrossReference_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ToAssignment_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getToScalarParserRuleCall_0_2_1_0()); }
		ruleScalar
		{ after(grammarAccess.getAssignmentAccess().getToScalarParserRuleCall_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__BitWidthAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getBitWidthBitSizeSpecParserRuleCall_1_0()); }
		ruleBitSizeSpec
		{ after(grammarAccess.getAssignmentAccess().getBitWidthBitSizeSpecParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ExpressionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStmt__CondAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalStmtAccess().getCondBooleanOrExprParserRuleCall_2_0()); }
		ruleBooleanOrExpr
		{ after(grammarAccess.getConditionalStmtAccess().getCondBooleanOrExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStmt__ThenStmtsAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalStmtAccess().getThenStmtsStatementParserRuleCall_4_0_0()); }
		ruleStatement
		{ after(grammarAccess.getConditionalStmtAccess().getThenStmtsStatementParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStmt__ThenStmtsAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalStmtAccess().getThenStmtsStatementParserRuleCall_4_1_1_0()); }
		ruleStatement
		{ after(grammarAccess.getConditionalStmtAccess().getThenStmtsStatementParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStmt__ElseStmtsAssignment_5_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalStmtAccess().getElseStmtsStatementParserRuleCall_5_1_0_0()); }
		ruleStatement
		{ after(grammarAccess.getConditionalStmtAccess().getElseStmtsStatementParserRuleCall_5_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStmt__ElseStmtsAssignment_5_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalStmtAccess().getElseStmtsStatementParserRuleCall_5_1_1_1_0()); }
		ruleStatement
		{ after(grammarAccess.getConditionalStmtAccess().getElseStmtsStatementParserRuleCall_5_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectCode__CodeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectCodeAccess().getCodeSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getDirectCodeAccess().getCodeSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectCode__CodeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectCodeAccess().getCodeSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getDirectCodeAccess().getCodeSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcedureAccess().getNamePROCEDURENAMETerminalRuleCall_0_0()); }
		RULE_PROCEDURENAME
		{ after(grammarAccess.getProcedureAccess().getNamePROCEDURENAMETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__ArgsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcedureAccess().getArgsExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getProcedureAccess().getArgsExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__ArgsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcedureAccess().getArgsExpressionParserRuleCall_3_1_0()); }
		ruleExpression
		{ after(grammarAccess.getProcedureAccess().getArgsExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDef__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantDefAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getConstantDefAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDef__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantDefAccess().getValueNATURALTerminalRuleCall_2_0()); }
		RULE_NATURAL
		{ after(grammarAccess.getConstantDefAccess().getValueNATURALTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDef__AttributesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantDefAccess().getAttributesConstAttributeEnumRuleCall_3_1_0()); }
		ruleConstAttribute
		{ after(grammarAccess.getConstantDefAccess().getAttributesConstAttributeEnumRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDef__AttributesAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantDefAccess().getAttributesConstAttributeEnumRuleCall_3_2_1_0()); }
		ruleConstAttribute
		{ after(grammarAccess.getConstantDefAccess().getAttributesConstAttributeEnumRuleCall_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDecl__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantDeclAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getConstantDeclAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDecl__ConstantDefaultAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantDeclAccess().getConstantDefaultConstantDefaultParserRuleCall_1_0()); }
		ruleConstantDefault
		{ after(grammarAccess.getConstantDeclAccess().getConstantDefaultConstantDefaultParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefault__DefaultValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantDefaultAccess().getDefaultValueNATURALTerminalRuleCall_1_0()); }
		RULE_NATURAL
		{ after(grammarAccess.getConstantDefaultAccess().getDefaultValueNATURALTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddressSpace__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddressSpaceAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAddressSpaceAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddressSpace__BitSizeAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddressSpaceAccess().getBitSizeNATURALTerminalRuleCall_2_0_0()); }
		RULE_NATURAL
		{ after(grammarAccess.getAddressSpaceAccess().getBitSizeNATURALTerminalRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddressSpace__BitSizeConstAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddressSpaceAccess().getBitSizeConstConstantCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getAddressSpaceAccess().getBitSizeConstConstantIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAddressSpaceAccess().getBitSizeConstConstantIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getAddressSpaceAccess().getBitSizeConstConstantCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterFile__RangeAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegisterFileAccess().getRangeRangeSpecParserRuleCall_0_0_0()); }
		ruleRangeSpec
		{ after(grammarAccess.getRegisterFileAccess().getRangeRangeSpecParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterFile__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegisterFileAccess().getNameIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRegisterFileAccess().getNameIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterFile__BitSizeAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegisterFileAccess().getBitSizeNATURALTerminalRuleCall_2_0_0()); }
		RULE_NATURAL
		{ after(grammarAccess.getRegisterFileAccess().getBitSizeNATURALTerminalRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterFile__BitSizeConstAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegisterFileAccess().getBitSizeConstConstantCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getRegisterFileAccess().getBitSizeConstConstantIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRegisterFileAccess().getBitSizeConstConstantIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getRegisterFileAccess().getBitSizeConstConstantCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterFile__AttributesAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegisterFileAccess().getAttributesRegAttributeEnumRuleCall_4_1_0()); }
		ruleRegAttribute
		{ after(grammarAccess.getRegisterFileAccess().getAttributesRegAttributeEnumRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterFile__AttributesAssignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegisterFileAccess().getAttributesRegAttributeEnumRuleCall_4_2_1_0()); }
		ruleRegAttribute
		{ after(grammarAccess.getRegisterFileAccess().getAttributesRegAttributeEnumRuleCall_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Register__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegisterAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getRegisterAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Register__BitSizeAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegisterAccess().getBitSizeNATURALTerminalRuleCall_2_0_0()); }
		RULE_NATURAL
		{ after(grammarAccess.getRegisterAccess().getBitSizeNATURALTerminalRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Register__BitSizeConstAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegisterAccess().getBitSizeConstConstantCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getRegisterAccess().getBitSizeConstConstantIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRegisterAccess().getBitSizeConstConstantIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getRegisterAccess().getBitSizeConstConstantCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Register__AttributesAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegisterAccess().getAttributesRegAttributeEnumRuleCall_4_1_0()); }
		ruleRegAttribute
		{ after(grammarAccess.getRegisterAccess().getAttributesRegAttributeEnumRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Register__AttributesAssignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegisterAccess().getAttributesRegAttributeEnumRuleCall_4_2_1_0()); }
		ruleRegAttribute
		{ after(grammarAccess.getRegisterAccess().getAttributesRegAttributeEnumRuleCall_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegisterAliasAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRegisterAliasAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__BitSizeAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegisterAliasAccess().getBitSizeNATURALTerminalRuleCall_3_0_0()); }
		RULE_NATURAL
		{ after(grammarAccess.getRegisterAliasAccess().getBitSizeNATURALTerminalRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__BitSizeConstAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegisterAliasAccess().getBitSizeConstConstantCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getRegisterAliasAccess().getBitSizeConstConstantIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRegisterAliasAccess().getBitSizeConstConstantIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getRegisterAliasAccess().getBitSizeConstConstantCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__AttributesAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegisterAliasAccess().getAttributesRegAttributeEnumRuleCall_5_1_0()); }
		ruleRegAttribute
		{ after(grammarAccess.getRegisterAliasAccess().getAttributesRegAttributeEnumRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__AttributesAssignment_5_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegisterAliasAccess().getAttributesRegAttributeEnumRuleCall_5_2_1_0()); }
		ruleRegAttribute
		{ after(grammarAccess.getRegisterAliasAccess().getAttributesRegAttributeEnumRuleCall_5_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__OriginalAssignment_7_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegisterAliasAccess().getOriginalRegisterCrossReference_7_0_0()); }
		(
			{ before(grammarAccess.getRegisterAliasAccess().getOriginalRegisterIDTerminalRuleCall_7_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRegisterAliasAccess().getOriginalRegisterIDTerminalRuleCall_7_0_0_1()); }
		)
		{ after(grammarAccess.getRegisterAliasAccess().getOriginalRegisterCrossReference_7_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__OriginalAssignment_7_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegisterAliasAccess().getOriginalRegisterFileCrossReference_7_1_0_0()); }
		(
			{ before(grammarAccess.getRegisterAliasAccess().getOriginalRegisterFileIDTerminalRuleCall_7_1_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRegisterAliasAccess().getOriginalRegisterFileIDTerminalRuleCall_7_1_0_0_1()); }
		)
		{ after(grammarAccess.getRegisterAliasAccess().getOriginalRegisterFileCrossReference_7_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__IndexAssignment_7_1_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegisterAliasAccess().getIndexNumberLiteralParserRuleCall_7_1_2_0_0()); }
		ruleNumberLiteral
		{ after(grammarAccess.getRegisterAliasAccess().getIndexNumberLiteralParserRuleCall_7_1_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterAlias__IndexAssignment_7_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegisterAliasAccess().getIndexValueRefParserRuleCall_7_1_2_1_0()); }
		ruleValueRef
		{ after(grammarAccess.getRegisterAliasAccess().getIndexValueRefParserRuleCall_7_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scalar__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScalarAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getScalarAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scalar__BitSizeAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScalarAccess().getBitSizeNATURALTerminalRuleCall_3_0_0()); }
		RULE_NATURAL
		{ after(grammarAccess.getScalarAccess().getBitSizeNATURALTerminalRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scalar__BitSizeConstAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScalarAccess().getBitSizeConstConstantCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getScalarAccess().getBitSizeConstConstantIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getScalarAccess().getBitSizeConstConstantIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getScalarAccess().getBitSizeConstConstantCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberLiteralAccess().getValueNATURALTerminalRuleCall_0()); }
		RULE_NATURAL
		{ after(grammarAccess.getNumberLiteralAccess().getValueNATURALTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOrExpr__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanOrExprAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getBooleanOrExprAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); }
			'||'
			{ after(grammarAccess.getBooleanOrExprAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getBooleanOrExprAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOrExpr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanOrExprAccess().getRightBooleanAndExprParserRuleCall_1_2_0()); }
		ruleBooleanAndExpr
		{ after(grammarAccess.getBooleanOrExprAccess().getRightBooleanAndExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAndExpr__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanAndExprAccess().getOpAmpersandAmpersandKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getBooleanAndExprAccess().getOpAmpersandAmpersandKeyword_1_1_0()); }
			'&&'
			{ after(grammarAccess.getBooleanAndExprAccess().getOpAmpersandAmpersandKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getBooleanAndExprAccess().getOpAmpersandAmpersandKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAndExpr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanAndExprAccess().getRightBitOrExprParserRuleCall_1_2_0()); }
		ruleBitOrExpr
		{ after(grammarAccess.getBooleanAndExprAccess().getRightBitOrExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitOrExpr__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitOrExprAccess().getOpVerticalLineKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getBitOrExprAccess().getOpVerticalLineKeyword_1_1_0()); }
			'|'
			{ after(grammarAccess.getBitOrExprAccess().getOpVerticalLineKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getBitOrExprAccess().getOpVerticalLineKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitOrExpr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitOrExprAccess().getRightBitXOrExprParserRuleCall_1_2_0()); }
		ruleBitXOrExpr
		{ after(grammarAccess.getBitOrExprAccess().getRightBitXOrExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitXOrExpr__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitXOrExprAccess().getOpCircumflexAccentKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getBitXOrExprAccess().getOpCircumflexAccentKeyword_1_1_0()); }
			'^'
			{ after(grammarAccess.getBitXOrExprAccess().getOpCircumflexAccentKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getBitXOrExprAccess().getOpCircumflexAccentKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitXOrExpr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitXOrExprAccess().getRightBitAndExprParserRuleCall_1_2_0()); }
		ruleBitAndExpr
		{ after(grammarAccess.getBitXOrExprAccess().getRightBitAndExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitAndExpr__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitAndExprAccess().getOpAmpersandKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getBitAndExprAccess().getOpAmpersandKeyword_1_1_0()); }
			'&'
			{ after(grammarAccess.getBitAndExprAccess().getOpAmpersandKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getBitAndExprAccess().getOpAmpersandKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitAndExpr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitAndExprAccess().getRightEqualityExprParserRuleCall_1_2_0()); }
		ruleEqualityExpr
		{ after(grammarAccess.getBitAndExprAccess().getRightEqualityExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExprAccess().getOpAlternatives_1_1_0()); }
		(rule__EqualityExpr__OpAlternatives_1_1_0)
		{ after(grammarAccess.getEqualityExprAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExprAccess().getRightComparisonExprParserRuleCall_1_2_0()); }
		ruleComparisonExpr
		{ after(grammarAccess.getEqualityExprAccess().getRightComparisonExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpr__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExprAccess().getOpAlternatives_1_1_0()); }
		(rule__ComparisonExpr__OpAlternatives_1_1_0)
		{ after(grammarAccess.getComparisonExprAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExprAccess().getRightShiftExprParserRuleCall_1_2_0()); }
		ruleShiftExpr
		{ after(grammarAccess.getComparisonExprAccess().getRightShiftExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpr__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShiftExprAccess().getOpAlternatives_1_1_0()); }
		(rule__ShiftExpr__OpAlternatives_1_1_0)
		{ after(grammarAccess.getShiftExprAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShiftExprAccess().getRightAdditionExprParserRuleCall_1_2_0()); }
		ruleAdditionExpr
		{ after(grammarAccess.getShiftExprAccess().getRightAdditionExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpr__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionExprAccess().getOpAlternatives_1_1_0()); }
		(rule__AdditionExpr__OpAlternatives_1_1_0)
		{ after(grammarAccess.getAdditionExprAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionExprAccess().getRightMultiplicationExprParserRuleCall_1_2_0()); }
		ruleMultiplicationExpr
		{ after(grammarAccess.getAdditionExprAccess().getRightMultiplicationExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpr__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationExprAccess().getOpAlternatives_1_1_0()); }
		(rule__MultiplicationExpr__OpAlternatives_1_1_0)
		{ after(grammarAccess.getMultiplicationExprAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationExprAccess().getRightUnitaryExprParserRuleCall_1_2_0()); }
		ruleUnitaryExpr
		{ after(grammarAccess.getMultiplicationExprAccess().getRightUnitaryExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitaryExpr__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitaryExprAccess().getOpAlternatives_1_1_0()); }
		(rule__UnitaryExpr__OpAlternatives_1_1_0)
		{ after(grammarAccess.getUnitaryExprAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitaryExpr__ExprAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitaryExprAccess().getExprUnitaryExprParserRuleCall_1_2_0()); }
		ruleUnitaryExpr
		{ after(grammarAccess.getUnitaryExprAccess().getExprUnitaryExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeConv__TypeAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeConvAccess().getTypeDataTypeEnumRuleCall_1_2_0()); }
		ruleDataType
		{ after(grammarAccess.getTypeConvAccess().getTypeDataTypeEnumRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getNameFUNCTIONNAMETerminalRuleCall_1_1_0()); }
		RULE_FUNCTIONNAME
		{ after(grammarAccess.getPrimaryAccess().getNameFUNCTIONNAMETerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ArgsAssignment_1_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getArgsExpressionParserRuleCall_1_3_0_0()); }
		ruleExpression
		{ after(grammarAccess.getPrimaryAccess().getArgsExpressionParserRuleCall_1_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ArgsAssignment_1_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getArgsExpressionParserRuleCall_1_3_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getPrimaryAccess().getArgsExpressionParserRuleCall_1_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRef__ValueAssignment_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueRefAccess().getValueIndexedVariableCrossReference_0_0_0_0()); }
		(
			{ before(grammarAccess.getValueRefAccess().getValueIndexedVariableIDTerminalRuleCall_0_0_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getValueRefAccess().getValueIndexedVariableIDTerminalRuleCall_0_0_0_0_1()); }
		)
		{ after(grammarAccess.getValueRefAccess().getValueIndexedVariableCrossReference_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRef__IndexAssignment_0_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueRefAccess().getIndexExpressionParserRuleCall_0_0_2_0()); }
		ruleExpression
		{ after(grammarAccess.getValueRefAccess().getIndexExpressionParserRuleCall_0_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRef__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueRefAccess().getValueScalarVariableCrossReference_0_1_0()); }
		(
			{ before(grammarAccess.getValueRefAccess().getValueScalarVariableIDTerminalRuleCall_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getValueRefAccess().getValueScalarVariableIDTerminalRuleCall_0_1_0_1()); }
		)
		{ after(grammarAccess.getValueRefAccess().getValueScalarVariableCrossReference_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRef__ValueAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueRefAccess().getValueRValueCrossReference_0_2_0()); }
		(
			{ before(grammarAccess.getValueRefAccess().getValueRValueIDTerminalRuleCall_0_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getValueRefAccess().getValueRValueIDTerminalRuleCall_0_2_0_1()); }
		)
		{ after(grammarAccess.getValueRefAccess().getValueRValueCrossReference_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueRef__BitWidthAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueRefAccess().getBitWidthBitSizeSpecParserRuleCall_1_0()); }
		ruleBitSizeSpec
		{ after(grammarAccess.getValueRefAccess().getBitWidthBitSizeSpecParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitSizeSpec__ValueAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitSizeSpecAccess().getValueNATURALTerminalRuleCall_1_0_0()); }
		RULE_NATURAL
		{ after(grammarAccess.getBitSizeSpecAccess().getValueNATURALTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitSizeSpec__ConstantAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitSizeSpecAccess().getConstantConstantCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getBitSizeSpecAccess().getConstantConstantIDTerminalRuleCall_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getBitSizeSpecAccess().getConstantConstantIDTerminalRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getBitSizeSpecAccess().getConstantConstantCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_PROCEDURENAME : ('raise'|'leave'|'wait'|'dispatch_' ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'.')*);

RULE_FUNCTIONNAME : ('sext'|'zext'|'choose'|'shll'|'shrl'|'shra'|'fdispatch_' ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'.')*);

RULE_BVAL : 'b' ('0'..'9')+;

RULE_BOOLEAN : ('true'|'false');

RULE_NATURAL : (('0'|'1'..'9' ('_'? '0'..'9')*)|('0b'|'0B') '0'..'1' ('_'? '0'..'1')*|('0x'|'0X') ('0'..'9'|'a'..'f'|'A'..'F') ('_'? ('0'..'9'|'a'..'f'|'A'..'F'))*|'0' '_'? '0'..'7' ('_'? '0'..'7')*);

RULE_INT : 'this one has been deactivated';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'.')*;

RULE_STRING : '"' ('\\' .|~(('\\'|'"')))* '"';

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
